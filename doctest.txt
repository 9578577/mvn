**********************************************************************
File "mvar.py", line 445, in __main__.Mvar.__and__
Failed example:
    assert A & B == 1/(1/A+1/B)
Exception raised:
    Traceback (most recent call last):
      File "/usr/lib/python2.5/doctest.py", line 1228, in __run
        compileflags, 1) in test.globs
      File "<doctest __main__.Mvar.__and__[1]>", line 1, in <module>
        assert A & B == 1/(1/A+1/B)
    TypeError: unsupported operand type(s) for /: 'int' and 'Mvar'
**********************************************************************
File "mvar.py", line 446, in __main__.Mvar.__and__
Failed example:
    assert A & B & C == Paralell(B,C,A)
Exception raised:
    Traceback (most recent call last):
      File "/usr/lib/python2.5/doctest.py", line 1228, in __run
        compileflags, 1) in test.globs
      File "<doctest __main__.Mvar.__and__[2]>", line 1, in <module>
        assert A & B & C == Paralell(B,C,A)
    NameError: name 'C' is not defined
**********************************************************************
File "mvar.py", line 447, in __main__.Mvar.__and__
Failed example:
    assert A & B & C == Mvar.blend(B,A,C)== Mvar.__and__(C,B,A)
Exception raised:
    Traceback (most recent call last):
      File "/usr/lib/python2.5/doctest.py", line 1228, in __run
        compileflags, 1) in test.globs
      File "<doctest __main__.Mvar.__and__[3]>", line 1, in <module>
        assert A & B & C == Mvar.blend(B,A,C)== Mvar.__and__(C,B,A)
    NameError: name 'C' is not defined
**********************************************************************
File "mvar.py", line 453, in __main__.Mvar.__and__
Failed example:
    assert A & B == wiki(A,B)
Exception raised:
    Traceback (most recent call last):
      File "/usr/lib/python2.5/doctest.py", line 1228, in __run
        compileflags, 1) in test.globs
      File "<doctest __main__.Mvar.__and__[4]>", line 1, in <module>
        assert A & B == wiki(A,B)
      File "mvar.py", line 956, in wiki
        dot((numpy.eye(P.mean.size)-Kk),P.cov)
    TypeError: from_cov() takes exactly 1 argument (2 given)
**********************************************************************
File "mvar.py", line 766, in __main__.Mvar.__div__
Failed example:
    assert A/B == A*(B**(-1))
Exception raised:
    Traceback (most recent call last):
      File "/usr/lib/python2.5/doctest.py", line 1228, in __run
        compileflags, 1) in test.globs
      File "<doctest __main__.Mvar.__div__[0]>", line 1, in <module>
        assert A/B == A*(B**(-1))
    TypeError: unsupported operand type(s) for /: 'Mvar' and 'Mvar'
**********************************************************************
File "mvar.py", line 767, in __main__.Mvar.__div__
Failed example:
    assert A/M == A*(M**(-1))
Exception raised:
    Traceback (most recent call last):
      File "/usr/lib/python2.5/doctest.py", line 1228, in __run
        compileflags, 1) in test.globs
      File "<doctest __main__.Mvar.__div__[1]>", line 1, in <module>
        assert A/M == A*(M**(-1))
    TypeError: unsupported operand type(s) for /: 'Mvar' and 'matrix'
**********************************************************************
File "mvar.py", line 768, in __main__.Mvar.__div__
Failed example:
    assert A/K == A*(K**(-1))
Exception raised:
    Traceback (most recent call last):
      File "/usr/lib/python2.5/doctest.py", line 1228, in __run
        compileflags, 1) in test.globs
      File "<doctest __main__.Mvar.__div__[2]>", line 1, in <module>
        assert A/K == A*(K**(-1))
    TypeError: unsupported operand type(s) for /: 'Mvar' and 'float'
**********************************************************************
File "mvar.py", line 578, in __main__.Mvar.__mul__
Failed example:
    assert isinstance(M*A,numpy.Matrix) 
Exception raised:
    Traceback (most recent call last):
      File "/usr/lib/python2.5/doctest.py", line 1228, in __run
        compileflags, 1) in test.globs
      File "<doctest __main__.Mvar.__mul__[2]>", line 1, in <module>
        assert isinstance(M*A,numpy.Matrix)
      File "mvar.py", line 748, in __rmul__
        (other,self)= convert(other,self)
      File "mvar.py", line 688, in <lambda>
        :helper(numpy.array(other),self)
      File "mvar.py", line 685, in <lambda>
        other.ndim else
    NameError: global name 'item' is not defined
**********************************************************************
File "mvar.py", line 594, in __main__.Mvar.__mul__
Failed example:
    assert (A*2)*M == A*(4*M)
Exception raised:
    Traceback (most recent call last):
      File "/usr/lib/python2.5/doctest.py", line 1228, in __run
        compileflags, 1) in test.globs
      File "<doctest __main__.Mvar.__mul__[6]>", line 1, in <module>
        assert (A*2)*M == A*(4*M)
    AssertionError
**********************************************************************
File "mvar.py", line 605, in __main__.Mvar.__mul__
Failed example:
    assert (A*B).affine=A.affine*B.rotation.T*B.vectors
Exception raised:
    Traceback (most recent call last):
      File "/usr/lib/python2.5/doctest.py", line 1228, in __run
        compileflags, 1) in test.globs
      File "<doctest __main__.Mvar.__mul__[8]>", line 1
         assert (A*B).affine=A.affine*B.rotation.T*B.vectors
                            ^
     SyntaxError: invalid syntax
**********************************************************************
File "mvar.py", line 606, in __main__.Mvar.__mul__
Failed example:
    assert (A*B).vectors == A.vectors*B.rotation.T*B.scale*B.rotation
Exception raised:
    Traceback (most recent call last):
      File "/usr/lib/python2.5/doctest.py", line 1228, in __run
        compileflags, 1) in test.globs
      File "<doctest __main__.Mvar.__mul__[9]>", line 1, in <module>
        assert (A*B).vectors == A.vectors*B.rotation.T*B.scale*B.rotation
    ValueError: The truth value of an array with more than one element is ambiguous. Use a.any() or a.all()
**********************************************************************
File "mvar.py", line 607, in __main__.Mvar.__mul__
Failed example:
    assert (A*B).mean == A.mean*B.rotation.T*B.scale*B.rotation
Exception raised:
    Traceback (most recent call last):
      File "/usr/lib/python2.5/doctest.py", line 1228, in __run
        compileflags, 1) in test.globs
      File "<doctest __main__.Mvar.__mul__[10]>", line 1, in <module>
        assert (A*B).mean == A.mean*B.rotation.T*B.scale*B.rotation
    ValueError: The truth value of an array with more than one element is ambiguous. Use a.any() or a.all()
**********************************************************************
File "mvar.py", line 608, in __main__.Mvar.__mul__
Failed example:
    assert A*B == A*numpy.linalg.matrix_power(B.cov,0.5)
Exception raised:
    Traceback (most recent call last):
      File "/usr/lib/python2.5/doctest.py", line 1228, in __run
        compileflags, 1) in test.globs
      File "<doctest __main__.Mvar.__mul__[11]>", line 1, in <module>
        assert A*B == A*numpy.linalg.matrix_power(B.cov,0.5)
      File "/usr/lib/python2.5/site-packages/numpy/core/defmatrix.py", line 94, in matrix_power
        raise TypeError("exponent must be an integer")
    TypeError: exponent must be an integer
**********************************************************************
File "mvar.py", line 622, in __main__.Mvar.__mul__
Failed example:
    assert numpy.allclose((A+A),(2**0.5)*A.vectors)
Exception raised:
    Traceback (most recent call last):
      File "/usr/lib/python2.5/doctest.py", line 1228, in __run
        compileflags, 1) in test.globs
      File "<doctest __main__.Mvar.__mul__[13]>", line 1, in <module>
        assert numpy.allclose((A+A),(2**0.5)*A.vectors)
      File "/usr/lib/python2.5/site-packages/numpy/core/numeric.py", line 717, in allclose
        xinf = isinf(x)
    TypeError: function not supported for these types, and can't coerce safely to supported types
**********************************************************************
File "mvar.py", line 651, in __main__.Mvar.__mul__
Failed example:
    assert numpy.allclose((A*eye*K).vectors,A.vectors*K)
Exception raised:
    Traceback (most recent call last):
      File "/usr/lib/python2.5/doctest.py", line 1228, in __run
        compileflags, 1) in test.globs
      File "<doctest __main__.Mvar.__mul__[20]>", line 1, in <module>
        assert numpy.allclose((A*eye*K).vectors,A.vectors*K)
    NameError: name 'eye' is not defined
**********************************************************************
File "mvar.py", line 652, in __main__.Mvar.__mul__
Failed example:
    assert numpy.allclose((A*eye*K).mean,A.mean*K)
Exception raised:
    Traceback (most recent call last):
      File "/usr/lib/python2.5/doctest.py", line 1228, in __run
        compileflags, 1) in test.globs
      File "<doctest __main__.Mvar.__mul__[21]>", line 1, in <module>
        assert numpy.allclose((A*eye*K).mean,A.mean*K)
    NameError: name 'eye' is not defined
**********************************************************************
File "mvar.py", line 487, in __main__.Mvar.__pow__
Failed example:
    assert A**0== A**(-1)*A== A*A**(-1)== A/A        
Exception raised:
    Traceback (most recent call last):
      File "/usr/lib/python2.5/doctest.py", line 1228, in __run
        compileflags, 1) in test.globs
      File "<doctest __main__.Mvar.__pow__[0]>", line 1, in <module>
        assert A**0== A**(-1)*A== A*A**(-1)== A/A
    TypeError: unsupported operand type(s) for /: 'Mvar' and 'Mvar'
**********************************************************************
File "mvar.py", line 488, in __main__.Mvar.__pow__
Failed example:
    assert (A**K1)*(A**K2)=A**(K1+K2)
Exception raised:
    Traceback (most recent call last):
      File "/usr/lib/python2.5/doctest.py", line 1228, in __run
        compileflags, 1) in test.globs
      File "<doctest __main__.Mvar.__pow__[1]>", line 1
         assert (A**K1)*(A**K2)=A**(K1+K2)
                               ^
     SyntaxError: invalid syntax
**********************************************************************
File "mvar.py", line 489, in __main__.Mvar.__pow__
Failed example:
    assert A**K1/A**K2=A**(K1-K2)
Exception raised:
    Traceback (most recent call last):
      File "/usr/lib/python2.5/doctest.py", line 1228, in __run
        compileflags, 1) in test.globs
      File "<doctest __main__.Mvar.__pow__[2]>", line 1
         assert A**K1/A**K2=A**(K1-K2)
                           ^
     SyntaxError: invalid syntax
**********************************************************************
File "mvar.py", line 497, in __main__.Mvar.__pow__
Failed example:
    assert (A**0).scale == eye(A.mean.shape[1])
Exception raised:
    Traceback (most recent call last):
      File "/usr/lib/python2.5/doctest.py", line 1228, in __run
        compileflags, 1) in test.globs
      File "<doctest __main__.Mvar.__pow__[3]>", line 1, in <module>
        assert (A**0).scale == eye(A.mean.shape[1])
    NameError: name 'eye' is not defined
**********************************************************************
File "mvar.py", line 498, in __main__.Mvar.__pow__
Failed example:
    assert (A**0).rotation== A.rotation
Exception raised:
    Traceback (most recent call last):
      File "/usr/lib/python2.5/doctest.py", line 1228, in __run
        compileflags, 1) in test.globs
      File "<doctest __main__.Mvar.__pow__[4]>", line 1, in <module>
        assert (A**0).rotation== A.rotation
    ValueError: The truth value of an array with more than one element is ambiguous. Use a.any() or a.all()
**********************************************************************
File "mvar.py", line 499, in __main__.Mvar.__pow__
Failed example:
    assert (A**0).mean == dot(
Exception raised:
    Traceback (most recent call last):
      File "/usr/lib/python2.5/doctest.py", line 1228, in __run
        compileflags, 1) in test.globs
      File "<doctest __main__.Mvar.__pow__[5]>", line 1
         assert (A**0).mean == dot(
                                  
    ^
     SyntaxError: unexpected EOF while parsing
**********************************************************************
File "mvar.py", line 505, in __main__.Mvar.__pow__
Failed example:
    assert A.vectors== A.scale*A.rotation
Exception raised:
    Traceback (most recent call last):
      File "/usr/lib/python2.5/doctest.py", line 1228, in __run
        compileflags, 1) in test.globs
      File "<doctest __main__.Mvar.__pow__[6]>", line 1, in <module>
        assert A.vectors== A.scale*A.rotation
    ValueError: The truth value of an array with more than one element is ambiguous. Use a.any() or a.all()
**********************************************************************
File "mvar.py", line 506, in __main__.Mvar.__pow__
Failed example:
    assert (A**K).vectors== (A.scale**K)*A.rotation
Exception raised:
    Traceback (most recent call last):
      File "/usr/lib/python2.5/doctest.py", line 1228, in __run
        compileflags, 1) in test.globs
      File "<doctest __main__.Mvar.__pow__[7]>", line 1, in <module>
        assert (A**K).vectors== (A.scale**K)*A.rotation
    ValueError: The truth value of an array with more than one element is ambiguous. Use a.any() or a.all()
**********************************************************************
File "mvar.py", line 507, in __main__.Mvar.__pow__
Failed example:
    assert (A**K).vectors== A.vectors* A.rotation.T*A.scale**(K-1)*A.rotation
Exception raised:
    Traceback (most recent call last):
      File "/usr/lib/python2.5/doctest.py", line 1228, in __run
        compileflags, 1) in test.globs
      File "<doctest __main__.Mvar.__pow__[8]>", line 1, in <module>
        assert (A**K).vectors== A.vectors* A.rotation.T*A.scale**(K-1)*A.rotation
    ValueError: The truth value of an array with more than one element is ambiguous. Use a.any() or a.all()
**********************************************************************
File "mvar.py", line 508, in __main__.Mvar.__pow__
Failed example:
    assert (A**K).mean== A.mean* A.rotation.T*A.scale**(K-1)*A.rotation
Exception raised:
    Traceback (most recent call last):
      File "/usr/lib/python2.5/doctest.py", line 1228, in __run
        compileflags, 1) in test.globs
      File "<doctest __main__.Mvar.__pow__[9]>", line 1, in <module>
        assert (A**K).mean== A.mean* A.rotation.T*A.scale**(K-1)*A.rotation
    ValueError: The truth value of an array with more than one element is ambiguous. Use a.any() or a.all()
**********************************************************************
File "mvar.py", line 515, in __main__.Mvar.__pow__
Failed example:
    assert A*B==A*(B.rotation.T*B.scale*B.rotation)
Exception raised:
    Traceback (most recent call last):
      File "/usr/lib/python2.5/doctest.py", line 1228, in __run
        compileflags, 1) in test.globs
      File "<doctest __main__.Mvar.__pow__[10]>", line 1, in <module>
        assert A*B==A*(B.rotation.T*B.scale*B.rotation)
    AssertionError
**********************************************************************
File "mvar.py", line 777, in __main__.Mvar.__rdiv__
Failed example:
    assert K/A == K*(A**(-1))
Exception raised:
    Traceback (most recent call last):
      File "/usr/lib/python2.5/doctest.py", line 1228, in __run
        compileflags, 1) in test.globs
      File "<doctest __main__.Mvar.__rdiv__[0]>", line 1, in <module>
        assert K/A == K*(A**(-1))
    TypeError: unsupported operand type(s) for /: 'float' and 'Mvar'
**********************************************************************
File "mvar.py", line 778, in __main__.Mvar.__rdiv__
Failed example:
    assert M/A == M*(A**(-1))
Exception raised:
    Traceback (most recent call last):
      File "/usr/lib/python2.5/doctest.py", line 1228, in __run
        compileflags, 1) in test.globs
      File "<doctest __main__.Mvar.__rdiv__[1]>", line 1, in <module>
        assert M/A == M*(A**(-1))
    TypeError: unsupported operand type(s) for /: 'float' and 'Mvar'
**********************************************************************
File "mvar.py", line 710, in __main__.Mvar.__rmul__
Failed example:
    assert k*A == A*k
Exception raised:
    Traceback (most recent call last):
      File "/usr/lib/python2.5/doctest.py", line 1228, in __run
        compileflags, 1) in test.globs
      File "<doctest __main__.Mvar.__rmul__[0]>", line 1, in <module>
        assert k*A == A*k
    NameError: name 'k' is not defined
**********************************************************************
File "mvar.py", line 715, in __main__.Mvar.__rmul__
Failed example:
    assert isinstance(M*A,numpy.matrix)
Exception raised:
    Traceback (most recent call last):
      File "/usr/lib/python2.5/doctest.py", line 1228, in __run
        compileflags, 1) in test.globs
      File "<doctest __main__.Mvar.__rmul__[2]>", line 1, in <module>
        assert isinstance(M*A,numpy.matrix)
      File "mvar.py", line 748, in __rmul__
        (other,self)= convert(other,self)
      File "mvar.py", line 688, in <lambda>
        :helper(numpy.array(other),self)
      File "mvar.py", line 685, in <lambda>
        other.ndim else
    NameError: global name 'item' is not defined
**********************************************************************
File "mvar.py", line ?, in __main__.Mvar.cov
Failed example:
    assert A.cov == dot(A.vectors.T,A.vectors) 
Exception raised:
    Traceback (most recent call last):
      File "/usr/lib/python2.5/doctest.py", line 1228, in __run
        compileflags, 1) in test.globs
      File "<doctest __main__.Mvar.cov[0]>", line 1, in <module>
        assert A.cov == dot(A.vectors.T,A.vectors)
    ValueError: The truth value of an array with more than one element is ambiguous. Use a.any() or a.all()
**********************************************************************
File "mvar.py", line ?, in __main__.Mvar.cov
Failed example:
    assert A.cov == dot(A.rotation.T,A.scale,A.scale,A.rotation)
Exception raised:
    Traceback (most recent call last):
      File "/usr/lib/python2.5/doctest.py", line 1228, in __run
        compileflags, 1) in test.globs
      File "<doctest __main__.Mvar.cov[1]>", line 1, in <module>
        assert A.cov == dot(A.rotation.T,A.scale,A.scale,A.rotation)
    ValueError: The truth value of an array with more than one element is ambiguous. Use a.any() or a.all()
**********************************************************************
File "mvar.py", line 309, in __main__.Mvar.get_cov
Failed example:
    assert A.cov == dot(A.vectors.T,A.vectors) 
Exception raised:
    Traceback (most recent call last):
      File "/usr/lib/python2.5/doctest.py", line 1228, in __run
        compileflags, 1) in test.globs
      File "<doctest __main__.Mvar.get_cov[0]>", line 1, in <module>
        assert A.cov == dot(A.vectors.T,A.vectors)
    ValueError: The truth value of an array with more than one element is ambiguous. Use a.any() or a.all()
**********************************************************************
File "mvar.py", line 310, in __main__.Mvar.get_cov
Failed example:
    assert A.cov == dot(A.rotation.T,A.scale,A.scale,A.rotation)
Exception raised:
    Traceback (most recent call last):
      File "/usr/lib/python2.5/doctest.py", line 1228, in __run
        compileflags, 1) in test.globs
      File "<doctest __main__.Mvar.get_cov[1]>", line 1, in <module>
        assert A.cov == dot(A.rotation.T,A.scale,A.scale,A.rotation)
    ValueError: The truth value of an array with more than one element is ambiguous. Use a.any() or a.all()
**********************************************************************
File "mvar.py", line 319, in __main__.Mvar.get_vectors
Failed example:
    assert A.vectors = dot(A.scale,A.rotation) 
Exception raised:
    Traceback (most recent call last):
      File "/usr/lib/python2.5/doctest.py", line 1228, in __run
        compileflags, 1) in test.globs
      File "<doctest __main__.Mvar.get_vectors[0]>", line 1
         assert A.vectors = dot(A.scale,A.rotation)
                          ^
     SyntaxError: invalid syntax
**********************************************************************
File "mvar.py", line ?, in __main__.Mvar.vectors
Failed example:
    assert A.vectors = dot(A.scale,A.rotation) 
Exception raised:
    Traceback (most recent call last):
      File "/usr/lib/python2.5/doctest.py", line 1228, in __run
        compileflags, 1) in test.globs
      File "<doctest __main__.Mvar.vectors[0]>", line 1
         assert A.vectors = dot(A.scale,A.rotation)
                          ^
     SyntaxError: invalid syntax
**********************************************************************
File "mvar.py", line 965, in __main__.isplit
Failed example:
    isodd = isplit([xrange(1,7),lambda item:bool(item%2))
Exception raised:
    Traceback (most recent call last):
      File "/usr/lib/python2.5/doctest.py", line 1228, in __run
        compileflags, 1) in test.globs
      File "<doctest __main__.isplit[0]>", line 1
         isodd = isplit([xrange(1,7),lambda item:bool(item%2))
                                                             ^
     SyntaxError: invalid syntax
**********************************************************************
File "mvar.py", line 966, in __main__.isplit
Failed example:
    list(isodd[True])
Exception raised:
    Traceback (most recent call last):
      File "/usr/lib/python2.5/doctest.py", line 1228, in __run
        compileflags, 1) in test.globs
      File "<doctest __main__.isplit[1]>", line 1, in <module>
        list(isodd[True])
    NameError: name 'isodd' is not defined
**********************************************************************
File "mvar.py", line 968, in __main__.isplit
Failed example:
    list(isodd[False])
Exception raised:
    Traceback (most recent call last):
      File "/usr/lib/python2.5/doctest.py", line 1228, in __run
        compileflags, 1) in test.globs
      File "<doctest __main__.isplit[2]>", line 1, in <module>
        list(isodd[False])
    NameError: name 'isodd' is not defined
**********************************************************************
File "mvar.py", line 974, in __main__.isplit
Failed example:
    [item for item in X if bool(item%2)]
Expected:
    [1,3,5]
Got:
    [1, 3, 5]
**********************************************************************
File "mvar.py", line 976, in __main__.isplit
Failed example:
    [item for item in X if not bool(item%2)]
Expected:
    [2,4,6]
Got:
    [2, 4, 6]
**********************************************************************
File "mvar.py", line 984, in __main__.isplit
Failed example:
    list(bytype[int])
Expected:
    [1,5,7]
Got:
    []
**********************************************************************
File "mvar.py", line 986, in __main__.isplit
Failed example:
    list(bytype[str])
Expected:
    ['a','abc']
Got:
    []
**********************************************************************
File "mvar.py", line 988, in __main__.isplit
Failed example:
    list(bytype[bool])
Expected:
    [True,False]
Got:
    [False]
**********************************************************************
File "mvar.py", line 947, in __main__.wiki
Failed example:
    ab=numpy.array([A,B],ndmin=2,dytpe=object)
Exception raised:
    Traceback (most recent call last):
      File "/usr/lib/python2.5/doctest.py", line 1228, in __run
        compileflags, 1) in test.globs
      File "<doctest __main__.wiki[0]>", line 1, in <module>
        ab=numpy.array([A,B],ndmin=2,dytpe=object)
    TypeError: 'dytpe' is an invalid keyword argument for this function
**********************************************************************
File "mvar.py", line 948, in __main__.wiki
Failed example:
    assert A & B == dot(ab,(ab.T)**(-2))**(-1)
Exception raised:
    Traceback (most recent call last):
      File "/usr/lib/python2.5/doctest.py", line 1228, in __run
        compileflags, 1) in test.globs
      File "<doctest __main__.wiki[1]>", line 1, in <module>
        assert A & B == dot(ab,(ab.T)**(-2))**(-1)
    NameError: name 'ab' is not defined
**********************************************************************
12 items had failures:
   4 of   5 in __main__.Mvar.__and__
   3 of   3 in __main__.Mvar.__div__
   9 of  24 in __main__.Mvar.__mul__
  11 of  11 in __main__.Mvar.__pow__
   2 of   2 in __main__.Mvar.__rdiv__
   2 of   3 in __main__.Mvar.__rmul__
   2 of   2 in __main__.Mvar.cov
   2 of   2 in __main__.Mvar.get_cov
   1 of   1 in __main__.Mvar.get_vectors
   1 of   1 in __main__.Mvar.vectors
   8 of  11 in __main__.isplit
   2 of   2 in __main__.wiki
***Test Failed*** 47 failures.
