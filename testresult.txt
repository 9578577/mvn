test values: ./runTests.py -x
{'ndim': None, 'flat': None, 'dtype': 'i', 'seed': None, 'x': True, 'flatness': (False, False, False), 'new': False}
.................E.......EE..F........F........EE.......E.FE....EF......F.......F.......F.F..F..F...........F.......F......F.FFEF...F.FEE..F...F.F..FF....F..EEF......E.FE....EF.FF.F.FFFFF.FFF.......F.F.FF..F..F........F..................F.......E......................................F.....F..F................................................FF.F.E.......EEF.F.................EE.......E..E....EF........FFF.F.F.......F.F..F..F....F......F..................F....F.FEE..F........F........EE.......E.F.....FF.F..F.FF......F.......F...F...F...........F............F.....F......FE..............................F..F....F..F..F..FF.....F.............................
======================================================================
ERROR: testDerivation (unitTests.innerTester)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/olpc/personal-projects/mvar/unitTests.py", line 819, in testDerivation
    Da=A.sample(Na)
  File "/home/olpc/personal-projects/mvar/__init__.py", line 631, in sample
    return Matrix(numpy.array(units*self.scaled.T)+self.mean)
ValueError: shape mismatch: objects cannot be broadcast to a single shape

======================================================================
ERROR: testDerivation (unitTests.outerTester)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/olpc/personal-projects/mvar/unitTests.py", line 988, in testDerivation
    Da=A.sample(Na)
  File "/home/olpc/personal-projects/mvar/__init__.py", line 631, in sample
    return Matrix(numpy.array(units*self.scaled.T)+self.mean)
ValueError: shape mismatch: objects cannot be broadcast to a single shape

======================================================================
ERROR: testComplexPowers (unitTests.powerTester)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/olpc/personal-projects/mvar/unitTests.py", line 336, in testComplexPowers
    self.assertFalse( self.A**self.K1/self.A**self.K2 == self.A**(self.K1-self.K2))
  File "/home/olpc/personal-projects/mvar/decorate/automath.py", line 71, in __div__
    return self*other**(-1)
  File "<string>", line 2, in __mul__
  File "/home/olpc/personal-projects/mvar/decorate/__init__.py", line 50, in F
    return decorated(*before(*args),**kwargs)
  File "<string>", line 2, in __mul__
  File "/home/olpc/personal-projects/mvar/decorate/__init__.py", line 140, in caller
    return found(*args,**kwargs)
  File "/home/olpc/personal-projects/mvar/__init__.py", line 1620, in _mvarMul
    result = (self*mvar.transform()+mvar*self.transform())
  File "<string>", line 2, in __mul__
  File "/home/olpc/personal-projects/mvar/decorate/__init__.py", line 50, in F
    return decorated(*before(*args),**kwargs)
  File "<string>", line 2, in __mul__
  File "/home/olpc/personal-projects/mvar/decorate/__init__.py", line 140, in caller
    return found(*args,**kwargs)
  File "/home/olpc/personal-projects/mvar/__init__.py", line 1596, in _matrixMul
    vectors=self.vectors*matrix,
  File "/home/olpc/personal-projects/mvar/__init__.py", line 344, in __init__
    self.copy(self.square())
  File "/home/olpc/personal-projects/mvar/__init__.py", line 478, in square
    var=self.var,
  File "/home/olpc/personal-projects/mvar/square.py", line 74, in square
    (var,vectors) = _subSquare(vectors,var)
  File "/home/olpc/personal-projects/mvar/square.py", line 131, in _subSquare
    (val,vec)=eig(cov)
  File "/usr/lib/python2.6/dist-packages/numpy/linalg/linalg.py", line 790, in eig
    _assertFinite(a)
  File "/usr/lib/python2.6/dist-packages/numpy/linalg/linalg.py", line 118, in _assertFinite
    raise LinAlgError, "Array must not contain infs or NaNs"
LinAlgError: Array must not contain infs or NaNs

======================================================================
ERROR: testGivenScalar (unitTests.givenTester)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/olpc/personal-projects/mvar/unitTests.py", line 425, in testGivenScalar
    a = self.A.given(index=0,value=1)
  File "/home/olpc/personal-projects/mvar/__init__.py", line 888, in given
    vectors=vectors,
  File "/home/olpc/personal-projects/mvar/__init__.py", line 335, in __init__
    [1  ,mean   ],
  File "/home/olpc/personal-projects/mvar/helpers.py", line 170, in autostack
    for row in rows
  File "/usr/lib/python2.6/dist-packages/numpy/lib/shape_base.py", line 461, in vstack
    return _nx.concatenate(map(atleast_2d,tup),0)
ValueError: array dimensions must agree except for d_0

======================================================================
ERROR: testGivenVector (unitTests.givenTester)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/olpc/personal-projects/mvar/unitTests.py", line 448, in testGivenVector
    self.assertTrue( mvar.givenVector(self.A,index=0,value=1)==self.A.given(index=0,value=1) )
  File "/home/olpc/personal-projects/mvar/__init__.py", line 888, in given
    vectors=vectors,
  File "/home/olpc/personal-projects/mvar/__init__.py", line 335, in __init__
    [1  ,mean   ],
  File "/home/olpc/personal-projects/mvar/helpers.py", line 170, in autostack
    for row in rows
  File "/usr/lib/python2.6/dist-packages/numpy/lib/shape_base.py", line 461, in vstack
    return _nx.concatenate(map(atleast_2d,tup),0)
ValueError: array dimensions must agree except for d_0

======================================================================
ERROR: testAnd (unitTests.chainTester)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/olpc/personal-projects/mvar/unitTests.py", line 511, in testAnd
    measured[self.ndim:]=measurment
  File "/home/olpc/personal-projects/mvar/__init__.py", line 899, in __setitem__
    self.copy(self.given(index,value))
  File "/home/olpc/personal-projects/mvar/__init__.py", line 869, in given
    mean[:,fixed]=value.mean
IndexError: index (19) out of range (0<=index<18) in dimension 1

======================================================================
ERROR: testStacks (unitTests.chainTester)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/olpc/personal-projects/mvar/unitTests.py", line 467, in testStacks
    dataA=self.A.sample(100)
  File "/home/olpc/personal-projects/mvar/__init__.py", line 631, in sample
    return Matrix(numpy.array(units*self.scaled.T)+self.mean)
ValueError: shape mismatch: objects cannot be broadcast to a single shape

======================================================================
ERROR: testDerivation (unitTests.quadTester)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/olpc/personal-projects/mvar/unitTests.py", line 614, in testDerivation
    Da=self.A.sample(Na)
  File "/home/olpc/personal-projects/mvar/__init__.py", line 631, in sample
    return Matrix(numpy.array(units*self.scaled.T)+self.mean)
ValueError: shape mismatch: objects cannot be broadcast to a single shape

======================================================================
ERROR: testDerivation (unitTests.innerTester)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/olpc/personal-projects/mvar/unitTests.py", line 819, in testDerivation
    Da=A.sample(Na)
  File "/home/olpc/personal-projects/mvar/__init__.py", line 631, in sample
    return Matrix(numpy.array(units*self.scaled.T)+self.mean)
ValueError: shape mismatch: objects cannot be broadcast to a single shape

======================================================================
ERROR: testDerivation (unitTests.outerTester)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/olpc/personal-projects/mvar/unitTests.py", line 988, in testDerivation
    Da=A.sample(Na)
  File "/home/olpc/personal-projects/mvar/__init__.py", line 631, in sample
    return Matrix(numpy.array(units*self.scaled.T)+self.mean)
ValueError: shape mismatch: objects cannot be broadcast to a single shape

======================================================================
ERROR: testComplexPowers (unitTests.powerTester)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/olpc/personal-projects/mvar/unitTests.py", line 336, in testComplexPowers
    self.assertFalse( self.A**self.K1/self.A**self.K2 == self.A**(self.K1-self.K2))
  File "/home/olpc/personal-projects/mvar/decorate/automath.py", line 71, in __div__
    return self*other**(-1)
  File "<string>", line 2, in __mul__
  File "/home/olpc/personal-projects/mvar/decorate/__init__.py", line 50, in F
    return decorated(*before(*args),**kwargs)
  File "<string>", line 2, in __mul__
  File "/home/olpc/personal-projects/mvar/decorate/__init__.py", line 140, in caller
    return found(*args,**kwargs)
  File "/home/olpc/personal-projects/mvar/__init__.py", line 1620, in _mvarMul
    result = (self*mvar.transform()+mvar*self.transform())
  File "<string>", line 2, in __mul__
  File "/home/olpc/personal-projects/mvar/decorate/__init__.py", line 50, in F
    return decorated(*before(*args),**kwargs)
  File "<string>", line 2, in __mul__
  File "/home/olpc/personal-projects/mvar/decorate/__init__.py", line 140, in caller
    return found(*args,**kwargs)
  File "/home/olpc/personal-projects/mvar/__init__.py", line 1596, in _matrixMul
    vectors=self.vectors*matrix,
  File "/home/olpc/personal-projects/mvar/__init__.py", line 344, in __init__
    self.copy(self.square())
  File "/home/olpc/personal-projects/mvar/__init__.py", line 478, in square
    var=self.var,
  File "/home/olpc/personal-projects/mvar/square.py", line 74, in square
    (var,vectors) = _subSquare(vectors,var)
  File "/home/olpc/personal-projects/mvar/square.py", line 131, in _subSquare
    (val,vec)=eig(cov)
  File "/usr/lib/python2.6/dist-packages/numpy/linalg/linalg.py", line 790, in eig
    _assertFinite(a)
  File "/usr/lib/python2.6/dist-packages/numpy/linalg/linalg.py", line 118, in _assertFinite
    raise LinAlgError, "Array must not contain infs or NaNs"
LinAlgError: Array must not contain infs or NaNs

======================================================================
ERROR: testGivenScalar (unitTests.givenTester)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/olpc/personal-projects/mvar/unitTests.py", line 425, in testGivenScalar
    a = self.A.given(index=0,value=1)
  File "/home/olpc/personal-projects/mvar/__init__.py", line 888, in given
    vectors=vectors,
  File "/home/olpc/personal-projects/mvar/__init__.py", line 335, in __init__
    [1  ,mean   ],
  File "/home/olpc/personal-projects/mvar/helpers.py", line 170, in autostack
    for row in rows
  File "/usr/lib/python2.6/dist-packages/numpy/lib/shape_base.py", line 461, in vstack
    return _nx.concatenate(map(atleast_2d,tup),0)
ValueError: array dimensions must agree except for d_0

======================================================================
ERROR: testGivenVector (unitTests.givenTester)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/olpc/personal-projects/mvar/unitTests.py", line 448, in testGivenVector
    self.assertTrue( mvar.givenVector(self.A,index=0,value=1)==self.A.given(index=0,value=1) )
  File "/home/olpc/personal-projects/mvar/__init__.py", line 888, in given
    vectors=vectors,
  File "/home/olpc/personal-projects/mvar/__init__.py", line 335, in __init__
    [1  ,mean   ],
  File "/home/olpc/personal-projects/mvar/helpers.py", line 170, in autostack
    for row in rows
  File "/usr/lib/python2.6/dist-packages/numpy/lib/shape_base.py", line 461, in vstack
    return _nx.concatenate(map(atleast_2d,tup),0)
ValueError: array dimensions must agree except for d_0

======================================================================
ERROR: testAnd (unitTests.chainTester)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/olpc/personal-projects/mvar/unitTests.py", line 511, in testAnd
    measured[self.ndim:]=measurment
  File "/home/olpc/personal-projects/mvar/__init__.py", line 899, in __setitem__
    self.copy(self.given(index,value))
  File "/home/olpc/personal-projects/mvar/__init__.py", line 869, in given
    mean[:,fixed]=value.mean
IndexError: index (30) out of range (0<=index<29) in dimension 1

======================================================================
ERROR: testStacks (unitTests.chainTester)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/olpc/personal-projects/mvar/unitTests.py", line 467, in testStacks
    dataA=self.A.sample(100)
  File "/home/olpc/personal-projects/mvar/__init__.py", line 631, in sample
    return Matrix(numpy.array(units*self.scaled.T)+self.mean)
ValueError: shape mismatch: objects cannot be broadcast to a single shape

======================================================================
ERROR: testDerivation (unitTests.quadTester)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/olpc/personal-projects/mvar/unitTests.py", line 614, in testDerivation
    Da=self.A.sample(Na)
  File "/home/olpc/personal-projects/mvar/__init__.py", line 631, in sample
    return Matrix(numpy.array(units*self.scaled.T)+self.mean)
ValueError: shape mismatch: objects cannot be broadcast to a single shape

======================================================================
ERROR: testDerivation (unitTests.outerTester)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/olpc/personal-projects/mvar/unitTests.py", line 995, in testDerivation
    out = numpy.outer(Da,Db).reshape((20,3,10,3))
ValueError: total size of new array must be unchanged

======================================================================
ERROR: testDerivation (unitTests.innerTester)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/olpc/personal-projects/mvar/unitTests.py", line 819, in testDerivation
    Da=A.sample(Na)
  File "/home/olpc/personal-projects/mvar/__init__.py", line 631, in sample
    return Matrix(numpy.array(units*self.scaled.T)+self.mean)
ValueError: shape mismatch: objects cannot be broadcast to a single shape

======================================================================
ERROR: testDerivation (unitTests.outerTester)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/olpc/personal-projects/mvar/unitTests.py", line 988, in testDerivation
    Da=A.sample(Na)
  File "/home/olpc/personal-projects/mvar/__init__.py", line 631, in sample
    return Matrix(numpy.array(units*self.scaled.T)+self.mean)
ValueError: shape mismatch: objects cannot be broadcast to a single shape

======================================================================
ERROR: testComplexPowers (unitTests.powerTester)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/olpc/personal-projects/mvar/unitTests.py", line 336, in testComplexPowers
    self.assertFalse( self.A**self.K1/self.A**self.K2 == self.A**(self.K1-self.K2))
  File "/home/olpc/personal-projects/mvar/decorate/automath.py", line 71, in __div__
    return self*other**(-1)
  File "<string>", line 2, in __mul__
  File "/home/olpc/personal-projects/mvar/decorate/__init__.py", line 50, in F
    return decorated(*before(*args),**kwargs)
  File "<string>", line 2, in __mul__
  File "/home/olpc/personal-projects/mvar/decorate/__init__.py", line 140, in caller
    return found(*args,**kwargs)
  File "/home/olpc/personal-projects/mvar/__init__.py", line 1620, in _mvarMul
    result = (self*mvar.transform()+mvar*self.transform())
  File "<string>", line 2, in __mul__
  File "/home/olpc/personal-projects/mvar/decorate/__init__.py", line 50, in F
    return decorated(*before(*args),**kwargs)
  File "<string>", line 2, in __mul__
  File "/home/olpc/personal-projects/mvar/decorate/__init__.py", line 140, in caller
    return found(*args,**kwargs)
  File "/home/olpc/personal-projects/mvar/__init__.py", line 1596, in _matrixMul
    vectors=self.vectors*matrix,
  File "/home/olpc/personal-projects/mvar/__init__.py", line 344, in __init__
    self.copy(self.square())
  File "/home/olpc/personal-projects/mvar/__init__.py", line 478, in square
    var=self.var,
  File "/home/olpc/personal-projects/mvar/square.py", line 74, in square
    (var,vectors) = _subSquare(vectors,var)
  File "/home/olpc/personal-projects/mvar/square.py", line 131, in _subSquare
    (val,vec)=eig(cov)
  File "/usr/lib/python2.6/dist-packages/numpy/linalg/linalg.py", line 790, in eig
    _assertFinite(a)
  File "/usr/lib/python2.6/dist-packages/numpy/linalg/linalg.py", line 118, in _assertFinite
    raise LinAlgError, "Array must not contain infs or NaNs"
LinAlgError: Array must not contain infs or NaNs

======================================================================
ERROR: testGivenScalar (unitTests.givenTester)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/olpc/personal-projects/mvar/unitTests.py", line 425, in testGivenScalar
    a = self.A.given(index=0,value=1)
  File "/home/olpc/personal-projects/mvar/__init__.py", line 888, in given
    vectors=vectors,
  File "/home/olpc/personal-projects/mvar/__init__.py", line 335, in __init__
    [1  ,mean   ],
  File "/home/olpc/personal-projects/mvar/helpers.py", line 170, in autostack
    for row in rows
  File "/usr/lib/python2.6/dist-packages/numpy/lib/shape_base.py", line 461, in vstack
    return _nx.concatenate(map(atleast_2d,tup),0)
ValueError: array dimensions must agree except for d_0

======================================================================
ERROR: testGivenVector (unitTests.givenTester)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/olpc/personal-projects/mvar/unitTests.py", line 448, in testGivenVector
    self.assertTrue( mvar.givenVector(self.A,index=0,value=1)==self.A.given(index=0,value=1) )
  File "/home/olpc/personal-projects/mvar/__init__.py", line 888, in given
    vectors=vectors,
  File "/home/olpc/personal-projects/mvar/__init__.py", line 335, in __init__
    [1  ,mean   ],
  File "/home/olpc/personal-projects/mvar/helpers.py", line 170, in autostack
    for row in rows
  File "/usr/lib/python2.6/dist-packages/numpy/lib/shape_base.py", line 461, in vstack
    return _nx.concatenate(map(atleast_2d,tup),0)
ValueError: array dimensions must agree except for d_0

======================================================================
ERROR: testAnd (unitTests.chainTester)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/olpc/personal-projects/mvar/unitTests.py", line 511, in testAnd
    measured[self.ndim:]=measurment
  File "/home/olpc/personal-projects/mvar/__init__.py", line 899, in __setitem__
    self.copy(self.given(index,value))
  File "/home/olpc/personal-projects/mvar/__init__.py", line 869, in given
    mean[:,fixed]=value.mean
IndexError: index (10) out of range (0<=index<9) in dimension 1

======================================================================
ERROR: testStacks (unitTests.chainTester)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/olpc/personal-projects/mvar/unitTests.py", line 467, in testStacks
    dataA=self.A.sample(100)
  File "/home/olpc/personal-projects/mvar/__init__.py", line 631, in sample
    return Matrix(numpy.array(units*self.scaled.T)+self.mean)
ValueError: shape mismatch: objects cannot be broadcast to a single shape

======================================================================
ERROR: testDerivation (unitTests.quadTester)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/olpc/personal-projects/mvar/unitTests.py", line 614, in testDerivation
    Da=self.A.sample(Na)
  File "/home/olpc/personal-projects/mvar/__init__.py", line 631, in sample
    return Matrix(numpy.array(units*self.scaled.T)+self.mean)
ValueError: shape mismatch: objects cannot be broadcast to a single shape

======================================================================
ERROR: testDerivation (unitTests.outerTester)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/olpc/personal-projects/mvar/unitTests.py", line 995, in testDerivation
    out = numpy.outer(Da,Db).reshape((20,3,10,3))
ValueError: total size of new array must be unchanged

======================================================================
ERROR: testComplexPowers (unitTests.powerTester)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/olpc/personal-projects/mvar/unitTests.py", line 336, in testComplexPowers
    self.assertFalse( self.A**self.K1/self.A**self.K2 == self.A**(self.K1-self.K2))
  File "/home/olpc/personal-projects/mvar/decorate/automath.py", line 71, in __div__
    return self*other**(-1)
  File "<string>", line 2, in __mul__
  File "/home/olpc/personal-projects/mvar/decorate/__init__.py", line 50, in F
    return decorated(*before(*args),**kwargs)
  File "<string>", line 2, in __mul__
  File "/home/olpc/personal-projects/mvar/decorate/__init__.py", line 140, in caller
    return found(*args,**kwargs)
  File "/home/olpc/personal-projects/mvar/__init__.py", line 1620, in _mvarMul
    result = (self*mvar.transform()+mvar*self.transform())
  File "<string>", line 2, in __mul__
  File "/home/olpc/personal-projects/mvar/decorate/__init__.py", line 50, in F
    return decorated(*before(*args),**kwargs)
  File "<string>", line 2, in __mul__
  File "/home/olpc/personal-projects/mvar/decorate/__init__.py", line 140, in caller
    return found(*args,**kwargs)
  File "/home/olpc/personal-projects/mvar/__init__.py", line 1596, in _matrixMul
    vectors=self.vectors*matrix,
  File "/home/olpc/personal-projects/mvar/__init__.py", line 344, in __init__
    self.copy(self.square())
  File "/home/olpc/personal-projects/mvar/__init__.py", line 478, in square
    var=self.var,
  File "/home/olpc/personal-projects/mvar/square.py", line 74, in square
    (var,vectors) = _subSquare(vectors,var)
  File "/home/olpc/personal-projects/mvar/square.py", line 131, in _subSquare
    (val,vec)=eig(cov)
  File "/usr/lib/python2.6/dist-packages/numpy/linalg/linalg.py", line 790, in eig
    _assertFinite(a)
  File "/usr/lib/python2.6/dist-packages/numpy/linalg/linalg.py", line 118, in _assertFinite
    raise LinAlgError, "Array must not contain infs or NaNs"
LinAlgError: Array must not contain infs or NaNs

======================================================================
ERROR: testGivenScalar (unitTests.givenTester)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/olpc/personal-projects/mvar/unitTests.py", line 425, in testGivenScalar
    a = self.A.given(index=0,value=1)
  File "/home/olpc/personal-projects/mvar/__init__.py", line 888, in given
    vectors=vectors,
  File "/home/olpc/personal-projects/mvar/__init__.py", line 335, in __init__
    [1  ,mean   ],
  File "/home/olpc/personal-projects/mvar/helpers.py", line 170, in autostack
    for row in rows
  File "/usr/lib/python2.6/dist-packages/numpy/lib/shape_base.py", line 461, in vstack
    return _nx.concatenate(map(atleast_2d,tup),0)
ValueError: array dimensions must agree except for d_0

======================================================================
ERROR: testGivenVector (unitTests.givenTester)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/olpc/personal-projects/mvar/unitTests.py", line 448, in testGivenVector
    self.assertTrue( mvar.givenVector(self.A,index=0,value=1)==self.A.given(index=0,value=1) )
  File "/home/olpc/personal-projects/mvar/__init__.py", line 888, in given
    vectors=vectors,
  File "/home/olpc/personal-projects/mvar/__init__.py", line 335, in __init__
    [1  ,mean   ],
  File "/home/olpc/personal-projects/mvar/helpers.py", line 170, in autostack
    for row in rows
  File "/usr/lib/python2.6/dist-packages/numpy/lib/shape_base.py", line 461, in vstack
    return _nx.concatenate(map(atleast_2d,tup),0)
ValueError: array dimensions must agree except for d_0

======================================================================
ERROR: testAnd (unitTests.chainTester)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/olpc/personal-projects/mvar/unitTests.py", line 511, in testAnd
    measured[self.ndim:]=measurment
  File "/home/olpc/personal-projects/mvar/__init__.py", line 899, in __setitem__
    self.copy(self.given(index,value))
  File "/home/olpc/personal-projects/mvar/__init__.py", line 869, in given
    mean[:,fixed]=value.mean
IndexError: index (17) out of range (0<=index<16) in dimension 1

======================================================================
ERROR: testDerivation (unitTests.outerTester)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/olpc/personal-projects/mvar/unitTests.py", line 995, in testDerivation
    out = numpy.outer(Da,Db).reshape((20,3,10,3))
ValueError: total size of new array must be unchanged

======================================================================
FAIL: testRealPow (unitTests.powerTester)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/olpc/personal-projects/mvar/unitTests.py", line 382, in testRealPow
    self.assertTrue( self.A/self.A**-1 == self.A**2 )
AssertionError

======================================================================
FAIL: testParadoxes (unitTests.inversionTester)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/olpc/personal-projects/mvar/unitTests.py", line 545, in testParadoxes
    self.assertTrue(  self.A &(self.B & ~self.B) == self.A & Mvar(mean=self.B.mean, vectors=self.B.vectors, var=Matrix.infs) )
AssertionError

======================================================================
FAIL: testMoore (unitTests.chainTester)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/olpc/personal-projects/mvar/unitTests.py", line 464, in testMoore
    self.assertTrue( self.A.chain(b,self.M) == mvar.mooreChain(self.A,b,self.M) )
AssertionError

======================================================================
FAIL: Doctest: __init__.Mvar.KLdiv
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/usr/lib/python2.6/doctest.py", line 2152, in runTest
    raise self.failureException(self.format_failure(new.getvalue()))
AssertionError: Failed doctest test for __init__.Mvar.KLdiv
  File "/home/olpc/personal-projects/mvar/__init__.py", line 1817, in KLdiv

----------------------------------------------------------------------
File "/home/olpc/personal-projects/mvar/__init__.py", line 1821, in __init__.Mvar.KLdiv
Failed example:
    assert A.KLdiv(A)== 0
Exception raised:
    Traceback (most recent call last):
      File "/usr/lib/python2.6/doctest.py", line 1248, in __run
        compileflags, 1) in test.globs
      File "<doctest __init__.Mvar.KLdiv[0]>", line 1, in <module>
        assert A.KLdiv(A)== 0
      File "/home/olpc/personal-projects/mvar/__init__.py", line 1829, in KLdiv
        numpy.log(self.det()/other.det())-
    ZeroDivisionError: integer division or modulo by zero
----------------------------------------------------------------------
File "/home/olpc/personal-projects/mvar/__init__.py", line 1822, in __init__.Mvar.KLdiv
Failed example:
    assert A.KLdiv(B) > 0
Exception raised:
    Traceback (most recent call last):
      File "/usr/lib/python2.6/doctest.py", line 1248, in __run
        compileflags, 1) in test.globs
      File "<doctest __init__.Mvar.KLdiv[1]>", line 1, in <module>
        assert A.KLdiv(B) > 0
      File "/home/olpc/personal-projects/mvar/__init__.py", line 1829, in KLdiv
        numpy.log(self.det()/other.det())-
    ZeroDivisionError: integer division or modulo by zero


======================================================================
FAIL: Doctest: __init__.Mvar.__invert__
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/usr/lib/python2.6/doctest.py", line 2152, in runTest
    raise self.failureException(self.format_failure(new.getvalue()))
AssertionError: Failed doctest test for __init__.Mvar.__invert__
  File "/home/olpc/personal-projects/mvar/__init__.py", line 1111, in __invert__

----------------------------------------------------------------------
File "/home/olpc/personal-projects/mvar/__init__.py", line 1152, in __init__.Mvar.__invert__
Failed example:
    assert  A &(B & ~B) == A & Mvar(mean=B.mean, vectors=B.vectors, var=Matrix.infs)
Exception raised:
    Traceback (most recent call last):
      File "/usr/lib/python2.6/doctest.py", line 1248, in __run
        compileflags, 1) in test.globs
      File "<doctest __init__.Mvar.__invert__[14]>", line 1, in <module>
        assert  A &(B & ~B) == A & Mvar(mean=B.mean, vectors=B.vectors, var=Matrix.infs)
    AssertionError
----------------------------------------------------------------------
File "/home/olpc/personal-projects/mvar/__init__.py", line 1155, in __init__.Mvar.__invert__
Failed example:
    assert (A&~B) & B == (A&B) & ~B
Exception raised:
    Traceback (most recent call last):
      File "/usr/lib/python2.6/doctest.py", line 1248, in __run
        compileflags, 1) in test.globs
      File "<doctest __init__.Mvar.__invert__[15]>", line 1, in <module>
        assert (A&~B) & B == (A&B) & ~B
    AssertionError


======================================================================
FAIL: Doctest: __init__.Mvar.chain
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/usr/lib/python2.6/doctest.py", line 2152, in runTest
    raise self.failureException(self.format_failure(new.getvalue()))
AssertionError: Failed doctest test for __init__.Mvar.chain
  File "/home/olpc/personal-projects/mvar/__init__.py", line 727, in chain

----------------------------------------------------------------------
File "/home/olpc/personal-projects/mvar/__init__.py", line 754, in __init__.Mvar.chain
Failed example:
    assert A.chain(B*M,M) == mooreChain(A,B*M,M)
Exception raised:
    Traceback (most recent call last):
      File "/usr/lib/python2.6/doctest.py", line 1248, in __run
        compileflags, 1) in test.globs
      File "<doctest __init__.Mvar.chain[3]>", line 1, in <module>
        assert A.chain(B*M,M) == mooreChain(A,B*M,M)
    AssertionError
----------------------------------------------------------------------
File "/home/olpc/personal-projects/mvar/__init__.py", line 758, in __init__.Mvar.chain
Failed example:
    dataA=A.sample(100)
Exception raised:
    Traceback (most recent call last):
      File "/usr/lib/python2.6/doctest.py", line 1248, in __run
        compileflags, 1) in test.globs
      File "<doctest __init__.Mvar.chain[4]>", line 1, in <module>
        dataA=A.sample(100)
      File "/home/olpc/personal-projects/mvar/__init__.py", line 631, in sample
        return Matrix(numpy.array(units*self.scaled.T)+self.mean)
    ValueError: shape mismatch: objects cannot be broadcast to a single shape
----------------------------------------------------------------------
File "/home/olpc/personal-projects/mvar/__init__.py", line 759, in __init__.Mvar.chain
Failed example:
    a=Mvar.fromData(dataA)
Exception raised:
    Traceback (most recent call last):
      File "/usr/lib/python2.6/doctest.py", line 1248, in __run
        compileflags, 1) in test.globs
      File "<doctest __init__.Mvar.chain[5]>", line 1, in <module>
        a=Mvar.fromData(dataA)
    NameError: name 'dataA' is not defined
----------------------------------------------------------------------
File "/home/olpc/personal-projects/mvar/__init__.py", line 760, in __init__.Mvar.chain
Failed example:
    assert a.chain()==Mvar.fromData(numpy.hstack([dataA,dataA]))        
Exception raised:
    Traceback (most recent call last):
      File "/usr/lib/python2.6/doctest.py", line 1248, in __run
        compileflags, 1) in test.globs
      File "<doctest __init__.Mvar.chain[6]>", line 1, in <module>
        assert a.chain()==Mvar.fromData(numpy.hstack([dataA,dataA]))
    NameError: name 'a' is not defined
----------------------------------------------------------------------
File "/home/olpc/personal-projects/mvar/__init__.py", line 761, in __init__.Mvar.chain
Failed example:
    assert a.chain(transform=M) == Mvar.fromData(dataA*numpy.hstack([E,M]))
Exception raised:
    Traceback (most recent call last):
      File "/usr/lib/python2.6/doctest.py", line 1248, in __run
        compileflags, 1) in test.globs
      File "<doctest __init__.Mvar.chain[7]>", line 1, in <module>
        assert a.chain(transform=M) == Mvar.fromData(dataA*numpy.hstack([E,M]))
    NameError: name 'a' is not defined
----------------------------------------------------------------------
File "/home/olpc/personal-projects/mvar/__init__.py", line 762, in __init__.Mvar.chain
Failed example:
    assert a.chain(transform=M) == Mvar.fromData(numpy.hstack([dataA,dataA*M]))
Exception raised:
    Traceback (most recent call last):
      File "/usr/lib/python2.6/doctest.py", line 1248, in __run
        compileflags, 1) in test.globs
      File "<doctest __init__.Mvar.chain[8]>", line 1, in <module>
        assert a.chain(transform=M) == Mvar.fromData(numpy.hstack([dataA,dataA*M]))
    NameError: name 'a' is not defined
----------------------------------------------------------------------
File "/home/olpc/personal-projects/mvar/__init__.py", line 764, in __init__.Mvar.chain
Failed example:
    assert a.chain(B*M,M) == a.chain(transform=M)+Mvar.stack(Mvar.zeros(a.ndim),B*M)
Exception raised:
    Traceback (most recent call last):
      File "/usr/lib/python2.6/doctest.py", line 1248, in __run
        compileflags, 1) in test.globs
      File "<doctest __init__.Mvar.chain[9]>", line 1, in <module>
        assert a.chain(B*M,M) == a.chain(transform=M)+Mvar.stack(Mvar.zeros(a.ndim),B*M)
    NameError: name 'a' is not defined


======================================================================
FAIL: Doctest: __init__.Mvar.given
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/usr/lib/python2.6/doctest.py", line 2152, in runTest
    raise self.failureException(self.format_failure(new.getvalue()))
AssertionError: Failed doctest test for __init__.Mvar.given
  File "/home/olpc/personal-projects/mvar/__init__.py", line 813, in given

----------------------------------------------------------------------
File "/home/olpc/personal-projects/mvar/__init__.py", line 824, in __init__.Mvar.given
Failed example:
    a = A.given(index=0,value=1)
Exception raised:
    Traceback (most recent call last):
      File "/usr/lib/python2.6/doctest.py", line 1248, in __run
        compileflags, 1) in test.globs
      File "<doctest __init__.Mvar.given[0]>", line 1, in <module>
        a = A.given(index=0,value=1)
      File "/home/olpc/personal-projects/mvar/__init__.py", line 888, in given
        vectors=vectors,
      File "/home/olpc/personal-projects/mvar/__init__.py", line 335, in __init__
        [1  ,mean   ],
      File "/home/olpc/personal-projects/mvar/helpers.py", line 170, in autostack
        for row in rows
      File "/usr/lib/python2.6/dist-packages/numpy/lib/shape_base.py", line 461, in vstack
        return _nx.concatenate(map(atleast_2d,tup),0)
    ValueError: array dimensions must agree except for d_0
----------------------------------------------------------------------
File "/home/olpc/personal-projects/mvar/__init__.py", line 825, in __init__.Mvar.given
Failed example:
    assert a.mean[:,0]==1
Exception raised:
    Traceback (most recent call last):
      File "/usr/lib/python2.6/doctest.py", line 1248, in __run
        compileflags, 1) in test.globs
      File "<doctest __init__.Mvar.given[1]>", line 1, in <module>
        assert a.mean[:,0]==1
    NameError: name 'a' is not defined
----------------------------------------------------------------------
File "/home/olpc/personal-projects/mvar/__init__.py", line 826, in __init__.Mvar.given
Failed example:
    assert a.vectors[:,0]==numpy.zeros
Exception raised:
    Traceback (most recent call last):
      File "/usr/lib/python2.6/doctest.py", line 1248, in __run
        compileflags, 1) in test.globs
      File "<doctest __init__.Mvar.given[2]>", line 1, in <module>
        assert a.vectors[:,0]==numpy.zeros
    NameError: name 'a' is not defined
----------------------------------------------------------------------
File "/home/olpc/personal-projects/mvar/__init__.py", line 851, in __init__.Mvar.given
Failed example:
    a[0]=1
Exception raised:
    Traceback (most recent call last):
      File "/usr/lib/python2.6/doctest.py", line 1248, in __run
        compileflags, 1) in test.globs
      File "<doctest __init__.Mvar.given[13]>", line 1, in <module>
        a[0]=1
      File "/home/olpc/personal-projects/mvar/__init__.py", line 899, in __setitem__
        self.copy(self.given(index,value))
      File "/home/olpc/personal-projects/mvar/__init__.py", line 888, in given
        vectors=vectors,
      File "/home/olpc/personal-projects/mvar/__init__.py", line 335, in __init__
        [1  ,mean   ],
      File "/home/olpc/personal-projects/mvar/helpers.py", line 170, in autostack
        for row in rows
      File "/usr/lib/python2.6/dist-packages/numpy/lib/shape_base.py", line 461, in vstack
        return _nx.concatenate(map(atleast_2d,tup),0)
    ValueError: array dimensions must agree except for d_0
----------------------------------------------------------------------
File "/home/olpc/personal-projects/mvar/__init__.py", line 852, in __init__.Mvar.given
Failed example:
    assert a==A.given(index=0,value=1)
Exception raised:
    Traceback (most recent call last):
      File "/usr/lib/python2.6/doctest.py", line 1248, in __run
        compileflags, 1) in test.globs
      File "<doctest __init__.Mvar.given[14]>", line 1, in <module>
        assert a==A.given(index=0,value=1)
      File "/home/olpc/personal-projects/mvar/__init__.py", line 888, in given
        vectors=vectors,
      File "/home/olpc/personal-projects/mvar/__init__.py", line 335, in __init__
        [1  ,mean   ],
      File "/home/olpc/personal-projects/mvar/helpers.py", line 170, in autostack
        for row in rows
      File "/usr/lib/python2.6/dist-packages/numpy/lib/shape_base.py", line 461, in vstack
        return _nx.concatenate(map(atleast_2d,tup),0)
    ValueError: array dimensions must agree except for d_0


======================================================================
FAIL: Doctest: __init__.Mvar.info
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/usr/lib/python2.6/doctest.py", line 2152, in runTest
    raise self.failureException(self.format_failure(new.getvalue()))
AssertionError: Failed doctest test for __init__.Mvar.info
  File "/home/olpc/personal-projects/mvar/__init__.py", line 1778, in info

----------------------------------------------------------------------
File "/home/olpc/personal-projects/mvar/__init__.py", line 1780, in __init__.Mvar.info
Failed example:
    S=A.sample(100)   
    assert Matrix(-numpy.log(A(S))) == A.info(S)
Exception raised:
    Traceback (most recent call last):
      File "/usr/lib/python2.6/doctest.py", line 1248, in __run
        compileflags, 1) in test.globs
      File "<doctest __init__.Mvar.info[0]>", line 1, in <module>
        S=A.sample(100)
      File "/home/olpc/personal-projects/mvar/__init__.py", line 631, in sample
        return Matrix(numpy.array(units*self.scaled.T)+self.mean)
    ValueError: shape mismatch: objects cannot be broadcast to a single shape


======================================================================
FAIL: Doctest: __init__.Mvar.measure
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/usr/lib/python2.6/doctest.py", line 2152, in runTest
    raise self.failureException(self.format_failure(new.getvalue()))
AssertionError: Failed doctest test for __init__.Mvar.measure
  File "/home/olpc/personal-projects/mvar/__init__.py", line 633, in measure

----------------------------------------------------------------------
File "/home/olpc/personal-projects/mvar/__init__.py", line 656, in __init__.Mvar.measure
Failed example:
    result = sensor1.measure(actual) & sensor2.measure(actual)
Exception raised:
    Traceback (most recent call last):
      File "/usr/lib/python2.6/doctest.py", line 1248, in __run
        compileflags, 1) in test.globs
      File "<doctest __init__.Mvar.measure[5]>", line 1, in <module>
        result = sensor1.measure(actual) & sensor2.measure(actual)
      File "/home/olpc/personal-projects/mvar/__init__.py", line 658, in measure
        sample=self.sample(1)-self.mean
      File "/home/olpc/personal-projects/mvar/__init__.py", line 631, in sample
        return Matrix(numpy.array(units*self.scaled.T)+self.mean)
    ValueError: shape mismatch: objects cannot be broadcast to a single shape


======================================================================
FAIL: Doctest: __init__.Mvar.rank
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/usr/lib/python2.6/doctest.py", line 2152, in runTest
    raise self.failureException(self.format_failure(new.getvalue()))
AssertionError: Failed doctest test for __init__.Mvar.rank
  File "/home/olpc/personal-projects/mvar/__init__.py", line unknown line number, in rank

----------------------------------------------------------------------
File "/home/olpc/personal-projects/mvar/__init__.py", line ?, in __init__.Mvar.rank
Failed example:
    assert A.rank == A.var.size
Exception raised:
    Traceback (most recent call last):
      File "/usr/lib/python2.6/doctest.py", line 1248, in __run
        compileflags, 1) in test.globs
      File "<doctest __init__.Mvar.rank[0]>", line 1, in <module>
        assert A.rank == A.var.size
    AssertionError


======================================================================
FAIL: Doctest: __init__.givenVector
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/usr/lib/python2.6/doctest.py", line 2152, in runTest
    raise self.failureException(self.format_failure(new.getvalue()))
AssertionError: Failed doctest test for __init__.givenVector
  File "/home/olpc/personal-projects/mvar/__init__.py", line 1939, in givenVector

----------------------------------------------------------------------
File "/home/olpc/personal-projects/mvar/__init__.py", line 1944, in __init__.givenVector
Failed example:
    assert givenVector(A,index=0,value=1)==A.given(index=0,value=1)
Exception raised:
    Traceback (most recent call last):
      File "/usr/lib/python2.6/doctest.py", line 1248, in __run
        compileflags, 1) in test.globs
      File "<doctest __init__.givenVector[0]>", line 1, in <module>
        assert givenVector(A,index=0,value=1)==A.given(index=0,value=1)
      File "/home/olpc/personal-projects/mvar/__init__.py", line 888, in given
        vectors=vectors,
      File "/home/olpc/personal-projects/mvar/__init__.py", line 335, in __init__
        [1  ,mean   ],
      File "/home/olpc/personal-projects/mvar/helpers.py", line 170, in autostack
        for row in rows
      File "/usr/lib/python2.6/dist-packages/numpy/lib/shape_base.py", line 461, in vstack
        return _nx.concatenate(map(atleast_2d,tup),0)
    ValueError: array dimensions must agree except for d_0


======================================================================
FAIL: testCosmetic (unitTests.equalityTester)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/olpc/personal-projects/mvar/unitTests.py", line 110, in testCosmetic
    self.assertTrue( self.A==self.A.inflate() )
AssertionError

======================================================================
FAIL: testMul (unitTests.productTester)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/olpc/personal-projects/mvar/unitTests.py", line 201, in testMul
    self.assertTrue( self.A**2==self.A*self.A )
AssertionError

======================================================================
FAIL: testMvarMul (unitTests.productTester)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/olpc/personal-projects/mvar/unitTests.py", line 218, in testMvarMul
    self.assertTrue( self.A*self.A==self.A**2 )
AssertionError

======================================================================
FAIL: testScalarMul (unitTests.productTester)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/olpc/personal-projects/mvar/unitTests.py", line 225, in testScalarMul
    self.assertTrue( self.A+self.A == 2*self.A )
AssertionError

======================================================================
FAIL: testAdd (unitTests.signTester)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/olpc/personal-projects/mvar/unitTests.py", line 145, in testAdd
    self.assertTrue( (self.A+self.A)==(2*self.A) )
AssertionError

======================================================================
FAIL: testPlus (unitTests.signTester)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/olpc/personal-projects/mvar/unitTests.py", line 127, in testPlus
    self.assertTrue( self.A+self.A == 2*self.A )
AssertionError

======================================================================
FAIL: testSub (unitTests.signTester)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/olpc/personal-projects/mvar/unitTests.py", line 171, in testSub
    self.assertTrue( self.A-self.A == Mvar(mean=numpy.zeros_like(self.A.mean)) )
AssertionError

======================================================================
FAIL: testRealPow (unitTests.powerTester)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/olpc/personal-projects/mvar/unitTests.py", line 381, in testRealPow
    self.assertTrue( self.A*self.A==self.A**2 )
AssertionError

======================================================================
FAIL: testRight (unitTests.commuteTester)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/olpc/personal-projects/mvar/unitTests.py", line 33, in testRight
    self.assertTrue( self.A & self.B == self.B & self.A )
AssertionError

======================================================================
FAIL: testDoubleNegative (unitTests.inversionTester)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/olpc/personal-projects/mvar/unitTests.py", line 537, in testDoubleNegative
    self.assertTrue( ~(~self.A&~self.B) == self.A & self.B )
AssertionError

======================================================================
FAIL: testParadoxes (unitTests.inversionTester)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/olpc/personal-projects/mvar/unitTests.py", line 542, in testParadoxes
    self.assertTrue( (self.A & ~self.A) == Mvar(mean=self.A.mean, vectors=self.A.vectors, var=Matrix.infs) )
AssertionError

======================================================================
FAIL: testCommutativity (unitTests.blendTester)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/olpc/personal-projects/mvar/unitTests.py", line 562, in testCommutativity
    self.assertTrue( self.A & self.B == self.B & self.A)
AssertionError

======================================================================
FAIL: testSelf (unitTests.blendTester)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/olpc/personal-projects/mvar/unitTests.py", line 565, in testSelf
    self.assertTrue( (self.A & self.A).cov == self.A.cov/2)
AssertionError

======================================================================
FAIL: testStack (unitTests.mergeTester)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/olpc/personal-projects/mvar/unitTests.py", line 315, in testStack
    self.assertTrue( self.AB[:self.A.ndim]==self.A )
AssertionError

======================================================================
FAIL: testMoore (unitTests.chainTester)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/olpc/personal-projects/mvar/unitTests.py", line 461, in testMoore
    self.assertTrue( self.A.chain(self.B) == mvar.mooreChain(self.A,self.B) )
AssertionError

======================================================================
FAIL: Doctest: __init__.Mvar.KLdiv
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/usr/lib/python2.6/doctest.py", line 2152, in runTest
    raise self.failureException(self.format_failure(new.getvalue()))
AssertionError: Failed doctest test for __init__.Mvar.KLdiv
  File "/home/olpc/personal-projects/mvar/__init__.py", line 1817, in KLdiv

----------------------------------------------------------------------
File "/home/olpc/personal-projects/mvar/__init__.py", line 1821, in __init__.Mvar.KLdiv
Failed example:
    assert A.KLdiv(A)== 0
Exception raised:
    Traceback (most recent call last):
      File "/usr/lib/python2.6/doctest.py", line 1248, in __run
        compileflags, 1) in test.globs
      File "<doctest __init__.Mvar.KLdiv[0]>", line 1, in <module>
        assert A.KLdiv(A)== 0
      File "/home/olpc/personal-projects/mvar/__init__.py", line 1829, in KLdiv
        numpy.log(self.det()/other.det())-
    ZeroDivisionError: integer division or modulo by zero
----------------------------------------------------------------------
File "/home/olpc/personal-projects/mvar/__init__.py", line 1822, in __init__.Mvar.KLdiv
Failed example:
    assert A.KLdiv(B) > 0
Exception raised:
    Traceback (most recent call last):
      File "/usr/lib/python2.6/doctest.py", line 1248, in __run
        compileflags, 1) in test.globs
      File "<doctest __init__.Mvar.KLdiv[1]>", line 1, in <module>
        assert A.KLdiv(B) > 0
    AssertionError


======================================================================
FAIL: Doctest: __init__.Mvar.__add__
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/usr/lib/python2.6/doctest.py", line 2152, in runTest
    raise self.failureException(self.format_failure(new.getvalue()))
AssertionError: Failed doctest test for __init__.Mvar.__add__
  File "/home/olpc/personal-projects/mvar/__init__.py", line 1705, in __add__

----------------------------------------------------------------------
File "/home/olpc/personal-projects/mvar/__init__.py", line 1735, in __init__.Mvar.__add__
Failed example:
    assert A-A == Mvar(mean=numpy.zeros_like(A.mean))
Exception raised:
    Traceback (most recent call last):
      File "/usr/lib/python2.6/doctest.py", line 1248, in __run
        compileflags, 1) in test.globs
      File "<doctest __init__.Mvar.__add__[5]>", line 1, in <module>
        assert A-A == Mvar(mean=numpy.zeros_like(A.mean))
    AssertionError
----------------------------------------------------------------------
File "/home/olpc/personal-projects/mvar/__init__.py", line 1736, in __init__.Mvar.__add__
Failed example:
    assert (A-B)+B == A
Exception raised:
    Traceback (most recent call last):
      File "/usr/lib/python2.6/doctest.py", line 1248, in __run
        compileflags, 1) in test.globs
      File "<doctest __init__.Mvar.__add__[6]>", line 1, in <module>
        assert (A-B)+B == A
    AssertionError


======================================================================
FAIL: Doctest: __init__.Mvar.__and__
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/usr/lib/python2.6/doctest.py", line 2152, in runTest
    raise self.failureException(self.format_failure(new.getvalue()))
AssertionError: Failed doctest test for __init__.Mvar.__and__
  File "/home/olpc/personal-projects/mvar/__init__.py", line 1199, in __and__

----------------------------------------------------------------------
File "/home/olpc/personal-projects/mvar/__init__.py", line 1216, in __init__.Mvar.__and__
Failed example:
    assert A & B == B & A 
Exception raised:
    Traceback (most recent call last):
      File "/usr/lib/python2.6/doctest.py", line 1248, in __run
        compileflags, 1) in test.globs
      File "<doctest __init__.Mvar.__and__[0]>", line 1, in <module>
        assert A & B == B & A
    AssertionError
----------------------------------------------------------------------
File "/home/olpc/personal-projects/mvar/__init__.py", line 1233, in __init__.Mvar.__and__
Failed example:
    assert (A & A).cov == A.cov/2
Exception raised:
    Traceback (most recent call last):
      File "/usr/lib/python2.6/doctest.py", line 1248, in __run
        compileflags, 1) in test.globs
      File "<doctest __init__.Mvar.__and__[4]>", line 1, in <module>
        assert (A & A).cov == A.cov/2
    AssertionError
----------------------------------------------------------------------
File "/home/olpc/personal-projects/mvar/__init__.py", line 1234, in __init__.Mvar.__and__
Failed example:
    assert (A & A).mean == A.mean
Exception raised:
    Traceback (most recent call last):
      File "/usr/lib/python2.6/doctest.py", line 1248, in __run
        compileflags, 1) in test.globs
      File "<doctest __init__.Mvar.__and__[5]>", line 1, in <module>
        assert (A & A).mean == A.mean
    AssertionError


======================================================================
FAIL: Doctest: __init__.Mvar.__gt__
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/usr/lib/python2.6/doctest.py", line 2152, in runTest
    raise self.failureException(self.format_failure(new.getvalue()))
AssertionError: Failed doctest test for __init__.Mvar.__gt__
  File "/home/olpc/personal-projects/mvar/__init__.py", line 1010, in __gt__

----------------------------------------------------------------------
File "/home/olpc/personal-projects/mvar/__init__.py", line 1012, in __init__.Mvar.__gt__
Failed example:
    assert (A > Matrix.infs(A.ndim)) == 0
Exception raised:
    Traceback (most recent call last):
      File "/usr/lib/python2.6/doctest.py", line 1248, in __run
        compileflags, 1) in test.globs
      File "<doctest __init__.Mvar.__gt__[0]>", line 1, in <module>
        assert (A > Matrix.infs(A.ndim)) == 0
      File "/home/olpc/personal-projects/mvar/__init__.py", line 1022, in __gt__
        numpy.inf*numpy.ones(self.mean.size)
      File "/home/olpc/personal-projects/mvar/__init__.py", line 1094, in inBox
        return mvs(lower,upper,self.cov)
      File "/home/olpc/personal-projects/mvar/mvncdf.py", line 189, in mvstdnormcdf
        lowinf = np.isneginf(lower)
      File "/usr/lib/python2.6/dist-packages/numpy/lib/ufunclike.py", line 173, in isneginf
        nx.logical_and(nx.isinf(x), nx.signbit(x), y)
    TypeError: function not supported for these types, and can't coerce safely to supported types
----------------------------------------------------------------------
File "/home/olpc/personal-projects/mvar/__init__.py", line 1013, in __init__.Mvar.__gt__
Failed example:
    assert (A > -Matrix.infs(A.ndim)) == 1
Exception raised:
    Traceback (most recent call last):
      File "/usr/lib/python2.6/doctest.py", line 1248, in __run
        compileflags, 1) in test.globs
      File "<doctest __init__.Mvar.__gt__[1]>", line 1, in <module>
        assert (A > -Matrix.infs(A.ndim)) == 1
      File "/home/olpc/personal-projects/mvar/__init__.py", line 1022, in __gt__
        numpy.inf*numpy.ones(self.mean.size)
      File "/home/olpc/personal-projects/mvar/__init__.py", line 1094, in inBox
        return mvs(lower,upper,self.cov)
      File "/home/olpc/personal-projects/mvar/mvncdf.py", line 189, in mvstdnormcdf
        lowinf = np.isneginf(lower)
      File "/usr/lib/python2.6/dist-packages/numpy/lib/ufunclike.py", line 173, in isneginf
        nx.logical_and(nx.isinf(x), nx.signbit(x), y)
    TypeError: function not supported for these types, and can't coerce safely to supported types
----------------------------------------------------------------------
File "/home/olpc/personal-projects/mvar/__init__.py", line 1016, in __init__.Mvar.__gt__
Failed example:
    assert Matrix(AV>AV.mean) == 2**-AV.ndim 
Exception raised:
    Traceback (most recent call last):
      File "/usr/lib/python2.6/doctest.py", line 1248, in __run
        compileflags, 1) in test.globs
      File "<doctest __init__.Mvar.__gt__[3]>", line 1, in <module>
        assert Matrix(AV>AV.mean) == 2**-AV.ndim
      File "/home/olpc/personal-projects/mvar/__init__.py", line 1022, in __gt__
        numpy.inf*numpy.ones(self.mean.size)
      File "/home/olpc/personal-projects/mvar/__init__.py", line 1094, in inBox
        return mvs(lower,upper,self.cov)
      File "/home/olpc/personal-projects/mvar/mvncdf.py", line 189, in mvstdnormcdf
        lowinf = np.isneginf(lower)
      File "/usr/lib/python2.6/dist-packages/numpy/lib/ufunclike.py", line 173, in isneginf
        nx.logical_and(nx.isinf(x), nx.signbit(x), y)
    TypeError: function not supported for these types, and can't coerce safely to supported types


======================================================================
FAIL: Doctest: __init__.Mvar.__invert__
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/usr/lib/python2.6/doctest.py", line 2152, in runTest
    raise self.failureException(self.format_failure(new.getvalue()))
AssertionError: Failed doctest test for __init__.Mvar.__invert__
  File "/home/olpc/personal-projects/mvar/__init__.py", line 1111, in __invert__

----------------------------------------------------------------------
File "/home/olpc/personal-projects/mvar/__init__.py", line 1135, in __init__.Mvar.__invert__
Failed example:
    assert ~(~A&~B) == A & B 
Exception raised:
    Traceback (most recent call last):
      File "/usr/lib/python2.6/doctest.py", line 1248, in __run
        compileflags, 1) in test.globs
      File "<doctest __init__.Mvar.__invert__[10]>", line 1, in <module>
        assert ~(~A&~B) == A & B
    AssertionError
----------------------------------------------------------------------
File "/home/olpc/personal-projects/mvar/__init__.py", line 1141, in __init__.Mvar.__invert__
Failed example:
    assert (A & ~A) == Mvar(mean=A.mean, vectors=A.vectors, var=Matrix.infs)
Exception raised:
    Traceback (most recent call last):
      File "/usr/lib/python2.6/doctest.py", line 1248, in __run
        compileflags, 1) in test.globs
      File "<doctest __init__.Mvar.__invert__[11]>", line 1, in <module>
        assert (A & ~A) == Mvar(mean=A.mean, vectors=A.vectors, var=Matrix.infs)
    AssertionError
----------------------------------------------------------------------
File "/home/olpc/personal-projects/mvar/__init__.py", line 1147, in __init__.Mvar.__invert__
Failed example:
    if not B.flat:
        assert A == A & (B & ~B)
Exception raised:
    Traceback (most recent call last):
      File "/usr/lib/python2.6/doctest.py", line 1248, in __run
        compileflags, 1) in test.globs
      File "<doctest __init__.Mvar.__invert__[13]>", line 2, in <module>
        assert A == A & (B & ~B)
    AssertionError
----------------------------------------------------------------------
File "/home/olpc/personal-projects/mvar/__init__.py", line 1155, in __init__.Mvar.__invert__
Failed example:
    assert (A&~B) & B == (A&B) & ~B
Exception raised:
    Traceback (most recent call last):
      File "/usr/lib/python2.6/doctest.py", line 1248, in __run
        compileflags, 1) in test.globs
      File "<doctest __init__.Mvar.__invert__[15]>", line 1, in <module>
        assert (A&~B) & B == (A&B) & ~B
    AssertionError
----------------------------------------------------------------------
File "/home/olpc/personal-projects/mvar/__init__.py", line 1168, in __init__.Mvar.__invert__
Failed example:
    assert not numpy.isfinite((A & ~A).var).any()
Exception raised:
    Traceback (most recent call last):
      File "/usr/lib/python2.6/doctest.py", line 1248, in __run
        compileflags, 1) in test.globs
      File "<doctest __init__.Mvar.__invert__[17]>", line 1, in <module>
        assert not numpy.isfinite((A & ~A).var).any()
    AssertionError
----------------------------------------------------------------------
File "/home/olpc/personal-projects/mvar/__init__.py", line 1172, in __init__.Mvar.__invert__
Failed example:
    assert P==(A & ~A)       
Exception raised:
    Traceback (most recent call last):
      File "/usr/lib/python2.6/doctest.py", line 1248, in __run
        compileflags, 1) in test.globs
      File "<doctest __init__.Mvar.__invert__[20]>", line 1, in <module>
        assert P==(A & ~A)
    AssertionError
----------------------------------------------------------------------
File "/home/olpc/personal-projects/mvar/__init__.py", line 1175, in __init__.Mvar.__invert__
Failed example:
    assert (~A & ~B) == ~(A & B)
Exception raised:
    Traceback (most recent call last):
      File "/usr/lib/python2.6/doctest.py", line 1248, in __run
        compileflags, 1) in test.globs
      File "<doctest __init__.Mvar.__invert__[21]>", line 1, in <module>
        assert (~A & ~B) == ~(A & B)
    AssertionError


======================================================================
FAIL: Doctest: __init__.Mvar.__lt__
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/usr/lib/python2.6/doctest.py", line 2152, in runTest
    raise self.failureException(self.format_failure(new.getvalue()))
AssertionError: Failed doctest test for __init__.Mvar.__lt__
  File "/home/olpc/personal-projects/mvar/__init__.py", line 1031, in __lt__

----------------------------------------------------------------------
File "/home/olpc/personal-projects/mvar/__init__.py", line 1033, in __init__.Mvar.__lt__
Failed example:
    assert (A < Matrix.infs(A.ndim)) == 1
Exception raised:
    Traceback (most recent call last):
      File "/usr/lib/python2.6/doctest.py", line 1248, in __run
        compileflags, 1) in test.globs
      File "<doctest __init__.Mvar.__lt__[0]>", line 1, in <module>
        assert (A < Matrix.infs(A.ndim)) == 1
      File "/home/olpc/personal-projects/mvar/__init__.py", line 1043, in __lt__
        upper,
      File "/home/olpc/personal-projects/mvar/__init__.py", line 1094, in inBox
        return mvs(lower,upper,self.cov)
      File "/home/olpc/personal-projects/mvar/mvncdf.py", line 189, in mvstdnormcdf
        lowinf = np.isneginf(lower)
      File "/usr/lib/python2.6/dist-packages/numpy/lib/ufunclike.py", line 173, in isneginf
        nx.logical_and(nx.isinf(x), nx.signbit(x), y)
    TypeError: function not supported for these types, and can't coerce safely to supported types
----------------------------------------------------------------------
File "/home/olpc/personal-projects/mvar/__init__.py", line 1034, in __init__.Mvar.__lt__
Failed example:
    assert (A < -Matrix.infs(A.ndim)) == 0
Exception raised:
    Traceback (most recent call last):
      File "/usr/lib/python2.6/doctest.py", line 1248, in __run
        compileflags, 1) in test.globs
      File "<doctest __init__.Mvar.__lt__[1]>", line 1, in <module>
        assert (A < -Matrix.infs(A.ndim)) == 0
      File "/home/olpc/personal-projects/mvar/__init__.py", line 1043, in __lt__
        upper,
      File "/home/olpc/personal-projects/mvar/__init__.py", line 1094, in inBox
        return mvs(lower,upper,self.cov)
      File "/home/olpc/personal-projects/mvar/mvncdf.py", line 189, in mvstdnormcdf
        lowinf = np.isneginf(lower)
      File "/usr/lib/python2.6/dist-packages/numpy/lib/ufunclike.py", line 173, in isneginf
        nx.logical_and(nx.isinf(x), nx.signbit(x), y)
    TypeError: function not supported for these types, and can't coerce safely to supported types
----------------------------------------------------------------------
File "/home/olpc/personal-projects/mvar/__init__.py", line 1037, in __init__.Mvar.__lt__
Failed example:
    assert Matrix(AV<AV.mean) == 2**-AV.ndim 
Exception raised:
    Traceback (most recent call last):
      File "/usr/lib/python2.6/doctest.py", line 1248, in __run
        compileflags, 1) in test.globs
      File "<doctest __init__.Mvar.__lt__[3]>", line 1, in <module>
        assert Matrix(AV<AV.mean) == 2**-AV.ndim
      File "/home/olpc/personal-projects/mvar/__init__.py", line 1043, in __lt__
        upper,
      File "/home/olpc/personal-projects/mvar/__init__.py", line 1094, in inBox
        return mvs(lower,upper,self.cov)
      File "/home/olpc/personal-projects/mvar/mvncdf.py", line 189, in mvstdnormcdf
        lowinf = np.isneginf(lower)
      File "/usr/lib/python2.6/dist-packages/numpy/lib/ufunclike.py", line 173, in isneginf
        nx.logical_and(nx.isinf(x), nx.signbit(x), y)
    TypeError: function not supported for these types, and can't coerce safely to supported types


======================================================================
FAIL: Doctest: __init__.Mvar.__mul__
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/usr/lib/python2.6/doctest.py", line 2152, in runTest
    raise self.failureException(self.format_failure(new.getvalue()))
AssertionError: Failed doctest test for __init__.Mvar.__mul__
  File "/home/olpc/personal-projects/mvar/__init__.py", line 25, in __mul__

----------------------------------------------------------------------
File "/home/olpc/personal-projects/mvar/__init__.py", line 52, in __init__.Mvar.__mul__
Failed example:
    assert A+A == 2*A
Exception raised:
    Traceback (most recent call last):
      File "/usr/lib/python2.6/doctest.py", line 1248, in __run
        compileflags, 1) in test.globs
      File "<doctest __init__.Mvar.__mul__[5]>", line 1, in <module>
        assert A+A == 2*A
    AssertionError
----------------------------------------------------------------------
File "/home/olpc/personal-projects/mvar/__init__.py", line 89, in __init__.Mvar.__mul__
Failed example:
    assert A*(K1+K2)==A*K1+A*K2
Exception raised:
    Traceback (most recent call last):
      File "/usr/lib/python2.6/doctest.py", line 1248, in __run
        compileflags, 1) in test.globs
      File "<doctest __init__.Mvar.__mul__[22]>", line 1, in <module>
        assert A*(K1+K2)==A*K1+A*K2
    AssertionError


======================================================================
FAIL: Doctest: __init__.Mvar.__pow__
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/usr/lib/python2.6/doctest.py", line 2152, in runTest
    raise self.failureException(self.format_failure(new.getvalue()))
AssertionError: Failed doctest test for __init__.Mvar.__pow__
  File "/home/olpc/personal-projects/mvar/__init__.py", line 1276, in __pow__

----------------------------------------------------------------------
File "/home/olpc/personal-projects/mvar/__init__.py", line 1309, in __init__.Mvar.__pow__
Failed example:
    assert A.mean*A.transform(0) == ((A**-1)**-1).mean
Exception raised:
    Traceback (most recent call last):
      File "/usr/lib/python2.6/doctest.py", line 1248, in __run
        compileflags, 1) in test.globs
      File "<doctest __init__.Mvar.__pow__[5]>", line 1, in <module>
        assert A.mean*A.transform(0) == ((A**-1)**-1).mean
    AssertionError
----------------------------------------------------------------------
File "/home/olpc/personal-projects/mvar/__init__.py", line 1322, in __init__.Mvar.__pow__
Failed example:
    if ((not A.flat) or (k1>=0 and k1>=0)):
        assert (A**k1)*(A**k2)==A**(k1+k2) 
        assert A**k1/A**k2==A**(k1-k2) 
Exception raised:
    Traceback (most recent call last):
      File "/usr/lib/python2.6/doctest.py", line 1248, in __run
        compileflags, 1) in test.globs
      File "<doctest __init__.Mvar.__pow__[11]>", line 2, in <module>
        assert (A**k1)*(A**k2)==A**(k1+k2)
      File "<string>", line 2, in __mul__
      File "/home/olpc/personal-projects/mvar/decorate/__init__.py", line 50, in F
        return decorated(*before(*args),**kwargs)
      File "<string>", line 2, in __mul__
      File "/home/olpc/personal-projects/mvar/decorate/__init__.py", line 140, in caller
        return found(*args,**kwargs)
      File "/home/olpc/personal-projects/mvar/__init__.py", line 1620, in _mvarMul
        result = (self*mvar.transform()+mvar*self.transform())
      File "<string>", line 2, in __mul__
      File "/home/olpc/personal-projects/mvar/decorate/__init__.py", line 50, in F
        return decorated(*before(*args),**kwargs)
      File "<string>", line 2, in __mul__
      File "/home/olpc/personal-projects/mvar/decorate/__init__.py", line 140, in caller
        return found(*args,**kwargs)
      File "/home/olpc/personal-projects/mvar/__init__.py", line 1596, in _matrixMul
        vectors=self.vectors*matrix,
      File "/home/olpc/personal-projects/mvar/__init__.py", line 344, in __init__
        self.copy(self.square())
      File "/home/olpc/personal-projects/mvar/__init__.py", line 478, in square
        var=self.var,
      File "/home/olpc/personal-projects/mvar/square.py", line 74, in square
        (var,vectors) = _subSquare(vectors,var)
      File "/home/olpc/personal-projects/mvar/square.py", line 146, in _subSquare
        ( _ ,Xvec)=numpy.linalg.eigh(Xcov)
      File "/usr/lib/python2.6/dist-packages/numpy/linalg/linalg.py", line 924, in eigh
        raise LinAlgError, 'Eigenvalues did not converge'
    LinAlgError: Eigenvalues did not converge
----------------------------------------------------------------------
File "/home/olpc/personal-projects/mvar/__init__.py", line 1346, in __init__.Mvar.__pow__
Failed example:
    assert A**2==A*A
Exception raised:
    Traceback (most recent call last):
      File "/usr/lib/python2.6/doctest.py", line 1248, in __run
        compileflags, 1) in test.globs
      File "<doctest __init__.Mvar.__pow__[18]>", line 1, in <module>
        assert A**2==A*A
    AssertionError


======================================================================
FAIL: Doctest: __init__.Mvar.__rmul__
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/usr/lib/python2.6/doctest.py", line 2152, in runTest
    raise self.failureException(self.format_failure(new.getvalue()))
AssertionError: Failed doctest test for __init__.Mvar.__rmul__
  File "/home/olpc/personal-projects/mvar/__init__.py", line 25, in __rmul__

----------------------------------------------------------------------
File "/home/olpc/personal-projects/mvar/__init__.py", line 42, in __init__.Mvar.__rmul__
Failed example:
    assert A*A==A**2
Exception raised:
    Traceback (most recent call last):
      File "/usr/lib/python2.6/doctest.py", line 1248, in __run
        compileflags, 1) in test.globs
      File "<doctest __init__.Mvar.__rmul__[3]>", line 1, in <module>
        assert A*A==A**2
    AssertionError


======================================================================
FAIL: Doctest: __init__.Mvar._mvarMul
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/usr/lib/python2.6/doctest.py", line 2152, in runTest
    raise self.failureException(self.format_failure(new.getvalue()))
AssertionError: Failed doctest test for __init__.Mvar._mvarMul
  File "/home/olpc/personal-projects/mvar/__init__.py", line 1605, in _mvarMul

----------------------------------------------------------------------
File "/home/olpc/personal-projects/mvar/__init__.py", line 1611, in __init__.Mvar._mvarMul
Failed example:
    assert A*A==A**2
Exception raised:
    Traceback (most recent call last):
      File "/usr/lib/python2.6/doctest.py", line 1248, in __run
        compileflags, 1) in test.globs
      File "<doctest __init__.Mvar._mvarMul[0]>", line 1, in <module>
        assert A*A==A**2
    AssertionError


======================================================================
FAIL: Doctest: __init__.Mvar._scalarMul
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/usr/lib/python2.6/doctest.py", line 2152, in runTest
    raise self.failureException(self.format_failure(new.getvalue()))
AssertionError: Failed doctest test for __init__.Mvar._scalarMul
  File "/home/olpc/personal-projects/mvar/__init__.py", line 1529, in _scalarMul

----------------------------------------------------------------------
File "/home/olpc/personal-projects/mvar/__init__.py", line 1542, in __init__.Mvar._scalarMul
Failed example:
    assert (A+A)==(2*A)
Exception raised:
    Traceback (most recent call last):
      File "/usr/lib/python2.6/doctest.py", line 1248, in __run
        compileflags, 1) in test.globs
      File "<doctest __init__.Mvar._scalarMul[1]>", line 1, in <module>
        assert (A+A)==(2*A)
    AssertionError


======================================================================
FAIL: Doctest: __init__.Mvar.chain
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/usr/lib/python2.6/doctest.py", line 2152, in runTest
    raise self.failureException(self.format_failure(new.getvalue()))
AssertionError: Failed doctest test for __init__.Mvar.chain
  File "/home/olpc/personal-projects/mvar/__init__.py", line 727, in chain

----------------------------------------------------------------------
File "/home/olpc/personal-projects/mvar/__init__.py", line 753, in __init__.Mvar.chain
Failed example:
    assert A.chain(B) == mooreChain(A,B)
Exception raised:
    Traceback (most recent call last):
      File "/usr/lib/python2.6/doctest.py", line 1248, in __run
        compileflags, 1) in test.globs
      File "<doctest __init__.Mvar.chain[2]>", line 1, in <module>
        assert A.chain(B) == mooreChain(A,B)
    AssertionError
----------------------------------------------------------------------
File "/home/olpc/personal-projects/mvar/__init__.py", line 754, in __init__.Mvar.chain
Failed example:
    assert A.chain(B*M,M) == mooreChain(A,B*M,M)
Exception raised:
    Traceback (most recent call last):
      File "/usr/lib/python2.6/doctest.py", line 1248, in __run
        compileflags, 1) in test.globs
      File "<doctest __init__.Mvar.chain[3]>", line 1, in <module>
        assert A.chain(B*M,M) == mooreChain(A,B*M,M)
    AssertionError
----------------------------------------------------------------------
File "/home/olpc/personal-projects/mvar/__init__.py", line 758, in __init__.Mvar.chain
Failed example:
    dataA=A.sample(100)
Exception raised:
    Traceback (most recent call last):
      File "/usr/lib/python2.6/doctest.py", line 1248, in __run
        compileflags, 1) in test.globs
      File "<doctest __init__.Mvar.chain[4]>", line 1, in <module>
        dataA=A.sample(100)
      File "/home/olpc/personal-projects/mvar/__init__.py", line 631, in sample
        return Matrix(numpy.array(units*self.scaled.T)+self.mean)
    ValueError: shape mismatch: objects cannot be broadcast to a single shape
----------------------------------------------------------------------
File "/home/olpc/personal-projects/mvar/__init__.py", line 759, in __init__.Mvar.chain
Failed example:
    a=Mvar.fromData(dataA)
Exception raised:
    Traceback (most recent call last):
      File "/usr/lib/python2.6/doctest.py", line 1248, in __run
        compileflags, 1) in test.globs
      File "<doctest __init__.Mvar.chain[5]>", line 1, in <module>
        a=Mvar.fromData(dataA)
    NameError: name 'dataA' is not defined
----------------------------------------------------------------------
File "/home/olpc/personal-projects/mvar/__init__.py", line 760, in __init__.Mvar.chain
Failed example:
    assert a.chain()==Mvar.fromData(numpy.hstack([dataA,dataA]))        
Exception raised:
    Traceback (most recent call last):
      File "/usr/lib/python2.6/doctest.py", line 1248, in __run
        compileflags, 1) in test.globs
      File "<doctest __init__.Mvar.chain[6]>", line 1, in <module>
        assert a.chain()==Mvar.fromData(numpy.hstack([dataA,dataA]))
    NameError: name 'a' is not defined
----------------------------------------------------------------------
File "/home/olpc/personal-projects/mvar/__init__.py", line 761, in __init__.Mvar.chain
Failed example:
    assert a.chain(transform=M) == Mvar.fromData(dataA*numpy.hstack([E,M]))
Exception raised:
    Traceback (most recent call last):
      File "/usr/lib/python2.6/doctest.py", line 1248, in __run
        compileflags, 1) in test.globs
      File "<doctest __init__.Mvar.chain[7]>", line 1, in <module>
        assert a.chain(transform=M) == Mvar.fromData(dataA*numpy.hstack([E,M]))
    NameError: name 'a' is not defined
----------------------------------------------------------------------
File "/home/olpc/personal-projects/mvar/__init__.py", line 762, in __init__.Mvar.chain
Failed example:
    assert a.chain(transform=M) == Mvar.fromData(numpy.hstack([dataA,dataA*M]))
Exception raised:
    Traceback (most recent call last):
      File "/usr/lib/python2.6/doctest.py", line 1248, in __run
        compileflags, 1) in test.globs
      File "<doctest __init__.Mvar.chain[8]>", line 1, in <module>
        assert a.chain(transform=M) == Mvar.fromData(numpy.hstack([dataA,dataA*M]))
    NameError: name 'a' is not defined
----------------------------------------------------------------------
File "/home/olpc/personal-projects/mvar/__init__.py", line 764, in __init__.Mvar.chain
Failed example:
    assert a.chain(B*M,M) == a.chain(transform=M)+Mvar.stack(Mvar.zeros(a.ndim),B*M)
Exception raised:
    Traceback (most recent call last):
      File "/usr/lib/python2.6/doctest.py", line 1248, in __run
        compileflags, 1) in test.globs
      File "<doctest __init__.Mvar.chain[9]>", line 1, in <module>
        assert a.chain(B*M,M) == a.chain(transform=M)+Mvar.stack(Mvar.zeros(a.ndim),B*M)
    NameError: name 'a' is not defined


======================================================================
FAIL: Doctest: __init__.Mvar.given
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/usr/lib/python2.6/doctest.py", line 2152, in runTest
    raise self.failureException(self.format_failure(new.getvalue()))
AssertionError: Failed doctest test for __init__.Mvar.given
  File "/home/olpc/personal-projects/mvar/__init__.py", line 813, in given

----------------------------------------------------------------------
File "/home/olpc/personal-projects/mvar/__init__.py", line 824, in __init__.Mvar.given
Failed example:
    a = A.given(index=0,value=1)
Exception raised:
    Traceback (most recent call last):
      File "/usr/lib/python2.6/doctest.py", line 1248, in __run
        compileflags, 1) in test.globs
      File "<doctest __init__.Mvar.given[0]>", line 1, in <module>
        a = A.given(index=0,value=1)
      File "/home/olpc/personal-projects/mvar/__init__.py", line 888, in given
        vectors=vectors,
      File "/home/olpc/personal-projects/mvar/__init__.py", line 335, in __init__
        [1  ,mean   ],
      File "/home/olpc/personal-projects/mvar/helpers.py", line 170, in autostack
        for row in rows
      File "/usr/lib/python2.6/dist-packages/numpy/lib/shape_base.py", line 461, in vstack
        return _nx.concatenate(map(atleast_2d,tup),0)
    ValueError: array dimensions must agree except for d_0
----------------------------------------------------------------------
File "/home/olpc/personal-projects/mvar/__init__.py", line 825, in __init__.Mvar.given
Failed example:
    assert a.mean[:,0]==1
Exception raised:
    Traceback (most recent call last):
      File "/usr/lib/python2.6/doctest.py", line 1248, in __run
        compileflags, 1) in test.globs
      File "<doctest __init__.Mvar.given[1]>", line 1, in <module>
        assert a.mean[:,0]==1
    NameError: name 'a' is not defined
----------------------------------------------------------------------
File "/home/olpc/personal-projects/mvar/__init__.py", line 826, in __init__.Mvar.given
Failed example:
    assert a.vectors[:,0]==numpy.zeros
Exception raised:
    Traceback (most recent call last):
      File "/usr/lib/python2.6/doctest.py", line 1248, in __run
        compileflags, 1) in test.globs
      File "<doctest __init__.Mvar.given[2]>", line 1, in <module>
        assert a.vectors[:,0]==numpy.zeros
    NameError: name 'a' is not defined
----------------------------------------------------------------------
File "/home/olpc/personal-projects/mvar/__init__.py", line 851, in __init__.Mvar.given
Failed example:
    a[0]=1
Exception raised:
    Traceback (most recent call last):
      File "/usr/lib/python2.6/doctest.py", line 1248, in __run
        compileflags, 1) in test.globs
      File "<doctest __init__.Mvar.given[13]>", line 1, in <module>
        a[0]=1
      File "/home/olpc/personal-projects/mvar/__init__.py", line 899, in __setitem__
        self.copy(self.given(index,value))
      File "/home/olpc/personal-projects/mvar/__init__.py", line 888, in given
        vectors=vectors,
      File "/home/olpc/personal-projects/mvar/__init__.py", line 335, in __init__
        [1  ,mean   ],
      File "/home/olpc/personal-projects/mvar/helpers.py", line 170, in autostack
        for row in rows
      File "/usr/lib/python2.6/dist-packages/numpy/lib/shape_base.py", line 461, in vstack
        return _nx.concatenate(map(atleast_2d,tup),0)
    ValueError: array dimensions must agree except for d_0
----------------------------------------------------------------------
File "/home/olpc/personal-projects/mvar/__init__.py", line 852, in __init__.Mvar.given
Failed example:
    assert a==A.given(index=0,value=1)
Exception raised:
    Traceback (most recent call last):
      File "/usr/lib/python2.6/doctest.py", line 1248, in __run
        compileflags, 1) in test.globs
      File "<doctest __init__.Mvar.given[14]>", line 1, in <module>
        assert a==A.given(index=0,value=1)
      File "/home/olpc/personal-projects/mvar/__init__.py", line 888, in given
        vectors=vectors,
      File "/home/olpc/personal-projects/mvar/__init__.py", line 335, in __init__
        [1  ,mean   ],
      File "/home/olpc/personal-projects/mvar/helpers.py", line 170, in autostack
        for row in rows
      File "/usr/lib/python2.6/dist-packages/numpy/lib/shape_base.py", line 461, in vstack
        return _nx.concatenate(map(atleast_2d,tup),0)
    ValueError: array dimensions must agree except for d_0


======================================================================
FAIL: Doctest: __init__.Mvar.info
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/usr/lib/python2.6/doctest.py", line 2152, in runTest
    raise self.failureException(self.format_failure(new.getvalue()))
AssertionError: Failed doctest test for __init__.Mvar.info
  File "/home/olpc/personal-projects/mvar/__init__.py", line 1778, in info

----------------------------------------------------------------------
File "/home/olpc/personal-projects/mvar/__init__.py", line 1780, in __init__.Mvar.info
Failed example:
    S=A.sample(100)   
    assert Matrix(-numpy.log(A(S))) == A.info(S)
Exception raised:
    Traceback (most recent call last):
      File "/usr/lib/python2.6/doctest.py", line 1248, in __run
        compileflags, 1) in test.globs
      File "<doctest __init__.Mvar.info[0]>", line 1, in <module>
        S=A.sample(100)
      File "/home/olpc/personal-projects/mvar/__init__.py", line 631, in sample
        return Matrix(numpy.array(units*self.scaled.T)+self.mean)
    ValueError: shape mismatch: objects cannot be broadcast to a single shape


======================================================================
FAIL: Doctest: __init__.Mvar.inner
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/usr/lib/python2.6/doctest.py", line 2152, in runTest
    raise self.failureException(self.format_failure(new.getvalue()))
AssertionError: Failed doctest test for __init__.Mvar.inner
  File "/home/olpc/personal-projects/mvar/__init__.py", line 1676, in inner

----------------------------------------------------------------------
File "/home/olpc/personal-projects/mvar/__init__.py", line 1678, in __init__.Mvar.inner
Failed example:
    assert A.inner(B) == B.inner(A)
Exception raised:
    Traceback (most recent call last):
      File "/usr/lib/python2.6/doctest.py", line 1248, in __run
        compileflags, 1) in test.globs
      File "<doctest __init__.Mvar.inner[0]>", line 1, in <module>
        assert A.inner(B) == B.inner(A)
    AssertionError


======================================================================
FAIL: Doctest: __init__.Mvar.measure
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/usr/lib/python2.6/doctest.py", line 2152, in runTest
    raise self.failureException(self.format_failure(new.getvalue()))
AssertionError: Failed doctest test for __init__.Mvar.measure
  File "/home/olpc/personal-projects/mvar/__init__.py", line 633, in measure

----------------------------------------------------------------------
File "/home/olpc/personal-projects/mvar/__init__.py", line 656, in __init__.Mvar.measure
Failed example:
    result = sensor1.measure(actual) & sensor2.measure(actual)
Exception raised:
    Traceback (most recent call last):
      File "/usr/lib/python2.6/doctest.py", line 1248, in __run
        compileflags, 1) in test.globs
      File "<doctest __init__.Mvar.measure[5]>", line 1, in <module>
        result = sensor1.measure(actual) & sensor2.measure(actual)
      File "/home/olpc/personal-projects/mvar/__init__.py", line 658, in measure
        sample=self.sample(1)-self.mean
      File "/home/olpc/personal-projects/mvar/__init__.py", line 631, in sample
        return Matrix(numpy.array(units*self.scaled.T)+self.mean)
    ValueError: shape mismatch: objects cannot be broadcast to a single shape


======================================================================
FAIL: Doctest: __init__.Mvar.rank
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/usr/lib/python2.6/doctest.py", line 2152, in runTest
    raise self.failureException(self.format_failure(new.getvalue()))
AssertionError: Failed doctest test for __init__.Mvar.rank
  File "/home/olpc/personal-projects/mvar/__init__.py", line unknown line number, in rank

----------------------------------------------------------------------
File "/home/olpc/personal-projects/mvar/__init__.py", line ?, in __init__.Mvar.rank
Failed example:
    assert A.rank == A.var.size
Exception raised:
    Traceback (most recent call last):
      File "/usr/lib/python2.6/doctest.py", line 1248, in __run
        compileflags, 1) in test.globs
      File "<doctest __init__.Mvar.rank[0]>", line 1, in <module>
        assert A.rank == A.var.size
    AssertionError


======================================================================
FAIL: Doctest: __init__.Mvar.stack
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/usr/lib/python2.6/doctest.py", line 2152, in runTest
    raise self.failureException(self.format_failure(new.getvalue()))
AssertionError: Failed doctest test for __init__.Mvar.stack
  File "/home/olpc/personal-projects/mvar/__init__.py", line 586, in stack

----------------------------------------------------------------------
File "/home/olpc/personal-projects/mvar/__init__.py", line 589, in __init__.Mvar.stack
Failed example:
    assert AB[:A.ndim]==A
Exception raised:
    Traceback (most recent call last):
      File "/usr/lib/python2.6/doctest.py", line 1248, in __run
        compileflags, 1) in test.globs
      File "<doctest __init__.Mvar.stack[1]>", line 1, in <module>
        assert AB[:A.ndim]==A
    AssertionError


======================================================================
FAIL: Doctest: __init__.givenVector
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/usr/lib/python2.6/doctest.py", line 2152, in runTest
    raise self.failureException(self.format_failure(new.getvalue()))
AssertionError: Failed doctest test for __init__.givenVector
  File "/home/olpc/personal-projects/mvar/__init__.py", line 1939, in givenVector

----------------------------------------------------------------------
File "/home/olpc/personal-projects/mvar/__init__.py", line 1944, in __init__.givenVector
Failed example:
    assert givenVector(A,index=0,value=1)==A.given(index=0,value=1)
Exception raised:
    Traceback (most recent call last):
      File "/usr/lib/python2.6/doctest.py", line 1248, in __run
        compileflags, 1) in test.globs
      File "<doctest __init__.givenVector[0]>", line 1, in <module>
        assert givenVector(A,index=0,value=1)==A.given(index=0,value=1)
      File "/home/olpc/personal-projects/mvar/__init__.py", line 888, in given
        vectors=vectors,
      File "/home/olpc/personal-projects/mvar/__init__.py", line 335, in __init__
        [1  ,mean   ],
      File "/home/olpc/personal-projects/mvar/helpers.py", line 170, in autostack
        for row in rows
      File "/usr/lib/python2.6/dist-packages/numpy/lib/shape_base.py", line 461, in vstack
        return _nx.concatenate(map(atleast_2d,tup),0)
    ValueError: array dimensions must agree except for d_0


======================================================================
FAIL: testDerivation (unitTests.innerTester)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/olpc/personal-projects/mvar/unitTests.py", line 838, in testDerivation
    self.assertTrue( Var == (numpy.array(Mean -dot)**2).mean() )
AssertionError

======================================================================
FAIL: testDerivation (unitTests.quadTester)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/olpc/personal-projects/mvar/unitTests.py", line 621, in testDerivation
    self.assertTrue( Matrix(dots) == numpy.diag(Da*Da.H) )
AssertionError

======================================================================
FAIL: Doctest: __init__.Mvar.__gt__
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/usr/lib/python2.6/doctest.py", line 2152, in runTest
    raise self.failureException(self.format_failure(new.getvalue()))
AssertionError: Failed doctest test for __init__.Mvar.__gt__
  File "/home/olpc/personal-projects/mvar/__init__.py", line 1010, in __gt__

----------------------------------------------------------------------
File "/home/olpc/personal-projects/mvar/__init__.py", line 1012, in __init__.Mvar.__gt__
Failed example:
    assert (A > Matrix.infs(A.ndim)) == 0
Exception raised:
    Traceback (most recent call last):
      File "/usr/lib/python2.6/doctest.py", line 1248, in __run
        compileflags, 1) in test.globs
      File "<doctest __init__.Mvar.__gt__[0]>", line 1, in <module>
        assert (A > Matrix.infs(A.ndim)) == 0
      File "/home/olpc/personal-projects/mvar/__init__.py", line 1022, in __gt__
        numpy.inf*numpy.ones(self.mean.size)
      File "/home/olpc/personal-projects/mvar/__init__.py", line 1094, in inBox
        return mvs(lower,upper,self.cov)
      File "/home/olpc/personal-projects/mvar/mvncdf.py", line 189, in mvstdnormcdf
        lowinf = np.isneginf(lower)
      File "/usr/lib/python2.6/dist-packages/numpy/lib/ufunclike.py", line 173, in isneginf
        nx.logical_and(nx.isinf(x), nx.signbit(x), y)
    TypeError: function not supported for these types, and can't coerce safely to supported types
----------------------------------------------------------------------
File "/home/olpc/personal-projects/mvar/__init__.py", line 1013, in __init__.Mvar.__gt__
Failed example:
    assert (A > -Matrix.infs(A.ndim)) == 1
Exception raised:
    Traceback (most recent call last):
      File "/usr/lib/python2.6/doctest.py", line 1248, in __run
        compileflags, 1) in test.globs
      File "<doctest __init__.Mvar.__gt__[1]>", line 1, in <module>
        assert (A > -Matrix.infs(A.ndim)) == 1
      File "/home/olpc/personal-projects/mvar/__init__.py", line 1022, in __gt__
        numpy.inf*numpy.ones(self.mean.size)
      File "/home/olpc/personal-projects/mvar/__init__.py", line 1094, in inBox
        return mvs(lower,upper,self.cov)
      File "/home/olpc/personal-projects/mvar/mvncdf.py", line 189, in mvstdnormcdf
        lowinf = np.isneginf(lower)
      File "/usr/lib/python2.6/dist-packages/numpy/lib/ufunclike.py", line 173, in isneginf
        nx.logical_and(nx.isinf(x), nx.signbit(x), y)
    TypeError: function not supported for these types, and can't coerce safely to supported types
----------------------------------------------------------------------
File "/home/olpc/personal-projects/mvar/__init__.py", line 1016, in __init__.Mvar.__gt__
Failed example:
    assert Matrix(AV>AV.mean) == 2**-AV.ndim 
Exception raised:
    Traceback (most recent call last):
      File "/usr/lib/python2.6/doctest.py", line 1248, in __run
        compileflags, 1) in test.globs
      File "<doctest __init__.Mvar.__gt__[3]>", line 1, in <module>
        assert Matrix(AV>AV.mean) == 2**-AV.ndim
      File "/home/olpc/personal-projects/mvar/__init__.py", line 1022, in __gt__
        numpy.inf*numpy.ones(self.mean.size)
      File "/home/olpc/personal-projects/mvar/__init__.py", line 1094, in inBox
        return mvs(lower,upper,self.cov)
      File "/home/olpc/personal-projects/mvar/mvncdf.py", line 189, in mvstdnormcdf
        lowinf = np.isneginf(lower)
      File "/usr/lib/python2.6/dist-packages/numpy/lib/ufunclike.py", line 173, in isneginf
        nx.logical_and(nx.isinf(x), nx.signbit(x), y)
    TypeError: function not supported for these types, and can't coerce safely to supported types


======================================================================
FAIL: Doctest: __init__.Mvar.__lt__
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/usr/lib/python2.6/doctest.py", line 2152, in runTest
    raise self.failureException(self.format_failure(new.getvalue()))
AssertionError: Failed doctest test for __init__.Mvar.__lt__
  File "/home/olpc/personal-projects/mvar/__init__.py", line 1031, in __lt__

----------------------------------------------------------------------
File "/home/olpc/personal-projects/mvar/__init__.py", line 1033, in __init__.Mvar.__lt__
Failed example:
    assert (A < Matrix.infs(A.ndim)) == 1
Exception raised:
    Traceback (most recent call last):
      File "/usr/lib/python2.6/doctest.py", line 1248, in __run
        compileflags, 1) in test.globs
      File "<doctest __init__.Mvar.__lt__[0]>", line 1, in <module>
        assert (A < Matrix.infs(A.ndim)) == 1
      File "/home/olpc/personal-projects/mvar/__init__.py", line 1043, in __lt__
        upper,
      File "/home/olpc/personal-projects/mvar/__init__.py", line 1094, in inBox
        return mvs(lower,upper,self.cov)
      File "/home/olpc/personal-projects/mvar/mvncdf.py", line 189, in mvstdnormcdf
        lowinf = np.isneginf(lower)
      File "/usr/lib/python2.6/dist-packages/numpy/lib/ufunclike.py", line 173, in isneginf
        nx.logical_and(nx.isinf(x), nx.signbit(x), y)
    TypeError: function not supported for these types, and can't coerce safely to supported types
----------------------------------------------------------------------
File "/home/olpc/personal-projects/mvar/__init__.py", line 1034, in __init__.Mvar.__lt__
Failed example:
    assert (A < -Matrix.infs(A.ndim)) == 0
Exception raised:
    Traceback (most recent call last):
      File "/usr/lib/python2.6/doctest.py", line 1248, in __run
        compileflags, 1) in test.globs
      File "<doctest __init__.Mvar.__lt__[1]>", line 1, in <module>
        assert (A < -Matrix.infs(A.ndim)) == 0
      File "/home/olpc/personal-projects/mvar/__init__.py", line 1043, in __lt__
        upper,
      File "/home/olpc/personal-projects/mvar/__init__.py", line 1094, in inBox
        return mvs(lower,upper,self.cov)
      File "/home/olpc/personal-projects/mvar/mvncdf.py", line 189, in mvstdnormcdf
        lowinf = np.isneginf(lower)
      File "/usr/lib/python2.6/dist-packages/numpy/lib/ufunclike.py", line 173, in isneginf
        nx.logical_and(nx.isinf(x), nx.signbit(x), y)
    TypeError: function not supported for these types, and can't coerce safely to supported types
----------------------------------------------------------------------
File "/home/olpc/personal-projects/mvar/__init__.py", line 1037, in __init__.Mvar.__lt__
Failed example:
    assert Matrix(AV<AV.mean) == 2**-AV.ndim 
Exception raised:
    Traceback (most recent call last):
      File "/usr/lib/python2.6/doctest.py", line 1248, in __run
        compileflags, 1) in test.globs
      File "<doctest __init__.Mvar.__lt__[3]>", line 1, in <module>
        assert Matrix(AV<AV.mean) == 2**-AV.ndim
      File "/home/olpc/personal-projects/mvar/__init__.py", line 1043, in __lt__
        upper,
      File "/home/olpc/personal-projects/mvar/__init__.py", line 1094, in inBox
        return mvs(lower,upper,self.cov)
      File "/home/olpc/personal-projects/mvar/mvncdf.py", line 189, in mvstdnormcdf
        lowinf = np.isneginf(lower)
      File "/usr/lib/python2.6/dist-packages/numpy/lib/ufunclike.py", line 173, in isneginf
        nx.logical_and(nx.isinf(x), nx.signbit(x), y)
    TypeError: function not supported for these types, and can't coerce safely to supported types


======================================================================
FAIL: testMixedMul (unitTests.productTester)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/olpc/personal-projects/mvar/unitTests.py", line 248, in testMixedMul
    self.assertTrue( self.K1*self.A*self.M == self.A*self.M*self.K1 )
AssertionError

======================================================================
FAIL: testMul (unitTests.productTester)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/olpc/personal-projects/mvar/unitTests.py", line 201, in testMul
    self.assertTrue( self.A**2==self.A*self.A )
AssertionError

======================================================================
FAIL: testMvarMul (unitTests.productTester)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/olpc/personal-projects/mvar/unitTests.py", line 218, in testMvarMul
    self.assertTrue( self.A*self.A==self.A**2 )
AssertionError

======================================================================
FAIL: testIntPowers (unitTests.powerTester)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/olpc/personal-projects/mvar/unitTests.py", line 324, in testIntPowers
    self.assertTrue( self.A.transform(self.N)== self.A.transform()**self.N )
AssertionError

======================================================================
FAIL: testRealPow (unitTests.powerTester)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/olpc/personal-projects/mvar/unitTests.py", line 381, in testRealPow
    self.assertTrue( self.A*self.A==self.A**2 )
AssertionError

======================================================================
FAIL: Doctest: __init__.Mvar.KLdiv
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/usr/lib/python2.6/doctest.py", line 2152, in runTest
    raise self.failureException(self.format_failure(new.getvalue()))
AssertionError: Failed doctest test for __init__.Mvar.KLdiv
  File "/home/olpc/personal-projects/mvar/__init__.py", line 1817, in KLdiv

----------------------------------------------------------------------
File "/home/olpc/personal-projects/mvar/__init__.py", line 1821, in __init__.Mvar.KLdiv
Failed example:
    assert A.KLdiv(A)== 0
Exception raised:
    Traceback (most recent call last):
      File "/usr/lib/python2.6/doctest.py", line 1248, in __run
        compileflags, 1) in test.globs
      File "<doctest __init__.Mvar.KLdiv[0]>", line 1, in <module>
        assert A.KLdiv(A)== 0
      File "/home/olpc/personal-projects/mvar/__init__.py", line 1829, in KLdiv
        numpy.log(self.det()/other.det())-
    ZeroDivisionError: integer division or modulo by zero
----------------------------------------------------------------------
File "/home/olpc/personal-projects/mvar/__init__.py", line 1822, in __init__.Mvar.KLdiv
Failed example:
    assert A.KLdiv(B) > 0
Exception raised:
    Traceback (most recent call last):
      File "/usr/lib/python2.6/doctest.py", line 1248, in __run
        compileflags, 1) in test.globs
      File "<doctest __init__.Mvar.KLdiv[1]>", line 1, in <module>
        assert A.KLdiv(B) > 0
      File "/home/olpc/personal-projects/mvar/__init__.py", line 1829, in KLdiv
        numpy.log(self.det()/other.det())-
    ZeroDivisionError: integer division or modulo by zero


======================================================================
FAIL: Doctest: __init__.Mvar.__mul__
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/usr/lib/python2.6/doctest.py", line 2152, in runTest
    raise self.failureException(self.format_failure(new.getvalue()))
AssertionError: Failed doctest test for __init__.Mvar.__mul__
  File "/home/olpc/personal-projects/mvar/__init__.py", line 25, in __mul__

----------------------------------------------------------------------
File "/home/olpc/personal-projects/mvar/__init__.py", line 67, in __init__.Mvar.__mul__
Failed example:
    assert K1*A*M == A*M*K1
Exception raised:
    Traceback (most recent call last):
      File "/usr/lib/python2.6/doctest.py", line 1248, in __run
        compileflags, 1) in test.globs
      File "<doctest __init__.Mvar.__mul__[13]>", line 1, in <module>
        assert K1*A*M == A*M*K1
    AssertionError


======================================================================
FAIL: Doctest: __init__.Mvar.__pow__
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/usr/lib/python2.6/doctest.py", line 2152, in runTest
    raise self.failureException(self.format_failure(new.getvalue()))
AssertionError: Failed doctest test for __init__.Mvar.__pow__
  File "/home/olpc/personal-projects/mvar/__init__.py", line 1276, in __pow__

----------------------------------------------------------------------
File "/home/olpc/personal-projects/mvar/__init__.py", line 1322, in __init__.Mvar.__pow__
Failed example:
    if ((not A.flat) or (k1>=0 and k1>=0)):
        assert (A**k1)*(A**k2)==A**(k1+k2) 
        assert A**k1/A**k2==A**(k1-k2) 
Exception raised:
    Traceback (most recent call last):
      File "/usr/lib/python2.6/doctest.py", line 1248, in __run
        compileflags, 1) in test.globs
      File "<doctest __init__.Mvar.__pow__[11]>", line 2, in <module>
        assert (A**k1)*(A**k2)==A**(k1+k2)
    AssertionError
----------------------------------------------------------------------
File "/home/olpc/personal-projects/mvar/__init__.py", line 1346, in __init__.Mvar.__pow__
Failed example:
    assert A**2==A*A
Exception raised:
    Traceback (most recent call last):
      File "/usr/lib/python2.6/doctest.py", line 1248, in __run
        compileflags, 1) in test.globs
      File "<doctest __init__.Mvar.__pow__[18]>", line 1, in <module>
        assert A**2==A*A
    AssertionError


======================================================================
FAIL: Doctest: __init__.Mvar.__rmul__
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/usr/lib/python2.6/doctest.py", line 2152, in runTest
    raise self.failureException(self.format_failure(new.getvalue()))
AssertionError: Failed doctest test for __init__.Mvar.__rmul__
  File "/home/olpc/personal-projects/mvar/__init__.py", line 25, in __rmul__

----------------------------------------------------------------------
File "/home/olpc/personal-projects/mvar/__init__.py", line 42, in __init__.Mvar.__rmul__
Failed example:
    assert A*A==A**2
Exception raised:
    Traceback (most recent call last):
      File "/usr/lib/python2.6/doctest.py", line 1248, in __run
        compileflags, 1) in test.globs
      File "<doctest __init__.Mvar.__rmul__[3]>", line 1, in <module>
        assert A*A==A**2
    AssertionError


======================================================================
FAIL: Doctest: __init__.Mvar._mvarMul
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/usr/lib/python2.6/doctest.py", line 2152, in runTest
    raise self.failureException(self.format_failure(new.getvalue()))
AssertionError: Failed doctest test for __init__.Mvar._mvarMul
  File "/home/olpc/personal-projects/mvar/__init__.py", line 1605, in _mvarMul

----------------------------------------------------------------------
File "/home/olpc/personal-projects/mvar/__init__.py", line 1611, in __init__.Mvar._mvarMul
Failed example:
    assert A*A==A**2
Exception raised:
    Traceback (most recent call last):
      File "/usr/lib/python2.6/doctest.py", line 1248, in __run
        compileflags, 1) in test.globs
      File "<doctest __init__.Mvar._mvarMul[0]>", line 1, in <module>
        assert A*A==A**2
    AssertionError


======================================================================
FAIL: Doctest: __init__.Mvar.chain
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/usr/lib/python2.6/doctest.py", line 2152, in runTest
    raise self.failureException(self.format_failure(new.getvalue()))
AssertionError: Failed doctest test for __init__.Mvar.chain
  File "/home/olpc/personal-projects/mvar/__init__.py", line 727, in chain

----------------------------------------------------------------------
File "/home/olpc/personal-projects/mvar/__init__.py", line 758, in __init__.Mvar.chain
Failed example:
    dataA=A.sample(100)
Exception raised:
    Traceback (most recent call last):
      File "/usr/lib/python2.6/doctest.py", line 1248, in __run
        compileflags, 1) in test.globs
      File "<doctest __init__.Mvar.chain[4]>", line 1, in <module>
        dataA=A.sample(100)
      File "/home/olpc/personal-projects/mvar/__init__.py", line 631, in sample
        return Matrix(numpy.array(units*self.scaled.T)+self.mean)
    ValueError: shape mismatch: objects cannot be broadcast to a single shape
----------------------------------------------------------------------
File "/home/olpc/personal-projects/mvar/__init__.py", line 759, in __init__.Mvar.chain
Failed example:
    a=Mvar.fromData(dataA)
Exception raised:
    Traceback (most recent call last):
      File "/usr/lib/python2.6/doctest.py", line 1248, in __run
        compileflags, 1) in test.globs
      File "<doctest __init__.Mvar.chain[5]>", line 1, in <module>
        a=Mvar.fromData(dataA)
    NameError: name 'dataA' is not defined
----------------------------------------------------------------------
File "/home/olpc/personal-projects/mvar/__init__.py", line 760, in __init__.Mvar.chain
Failed example:
    assert a.chain()==Mvar.fromData(numpy.hstack([dataA,dataA]))        
Exception raised:
    Traceback (most recent call last):
      File "/usr/lib/python2.6/doctest.py", line 1248, in __run
        compileflags, 1) in test.globs
      File "<doctest __init__.Mvar.chain[6]>", line 1, in <module>
        assert a.chain()==Mvar.fromData(numpy.hstack([dataA,dataA]))
    NameError: name 'a' is not defined
----------------------------------------------------------------------
File "/home/olpc/personal-projects/mvar/__init__.py", line 761, in __init__.Mvar.chain
Failed example:
    assert a.chain(transform=M) == Mvar.fromData(dataA*numpy.hstack([E,M]))
Exception raised:
    Traceback (most recent call last):
      File "/usr/lib/python2.6/doctest.py", line 1248, in __run
        compileflags, 1) in test.globs
      File "<doctest __init__.Mvar.chain[7]>", line 1, in <module>
        assert a.chain(transform=M) == Mvar.fromData(dataA*numpy.hstack([E,M]))
    NameError: name 'a' is not defined
----------------------------------------------------------------------
File "/home/olpc/personal-projects/mvar/__init__.py", line 762, in __init__.Mvar.chain
Failed example:
    assert a.chain(transform=M) == Mvar.fromData(numpy.hstack([dataA,dataA*M]))
Exception raised:
    Traceback (most recent call last):
      File "/usr/lib/python2.6/doctest.py", line 1248, in __run
        compileflags, 1) in test.globs
      File "<doctest __init__.Mvar.chain[8]>", line 1, in <module>
        assert a.chain(transform=M) == Mvar.fromData(numpy.hstack([dataA,dataA*M]))
    NameError: name 'a' is not defined
----------------------------------------------------------------------
File "/home/olpc/personal-projects/mvar/__init__.py", line 764, in __init__.Mvar.chain
Failed example:
    assert a.chain(B*M,M) == a.chain(transform=M)+Mvar.stack(Mvar.zeros(a.ndim),B*M)
Exception raised:
    Traceback (most recent call last):
      File "/usr/lib/python2.6/doctest.py", line 1248, in __run
        compileflags, 1) in test.globs
      File "<doctest __init__.Mvar.chain[9]>", line 1, in <module>
        assert a.chain(B*M,M) == a.chain(transform=M)+Mvar.stack(Mvar.zeros(a.ndim),B*M)
    NameError: name 'a' is not defined


======================================================================
FAIL: Doctest: __init__.Mvar.given
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/usr/lib/python2.6/doctest.py", line 2152, in runTest
    raise self.failureException(self.format_failure(new.getvalue()))
AssertionError: Failed doctest test for __init__.Mvar.given
  File "/home/olpc/personal-projects/mvar/__init__.py", line 813, in given

----------------------------------------------------------------------
File "/home/olpc/personal-projects/mvar/__init__.py", line 824, in __init__.Mvar.given
Failed example:
    a = A.given(index=0,value=1)
Exception raised:
    Traceback (most recent call last):
      File "/usr/lib/python2.6/doctest.py", line 1248, in __run
        compileflags, 1) in test.globs
      File "<doctest __init__.Mvar.given[0]>", line 1, in <module>
        a = A.given(index=0,value=1)
      File "/home/olpc/personal-projects/mvar/__init__.py", line 888, in given
        vectors=vectors,
      File "/home/olpc/personal-projects/mvar/__init__.py", line 335, in __init__
        [1  ,mean   ],
      File "/home/olpc/personal-projects/mvar/helpers.py", line 170, in autostack
        for row in rows
      File "/usr/lib/python2.6/dist-packages/numpy/lib/shape_base.py", line 461, in vstack
        return _nx.concatenate(map(atleast_2d,tup),0)
    ValueError: array dimensions must agree except for d_0
----------------------------------------------------------------------
File "/home/olpc/personal-projects/mvar/__init__.py", line 825, in __init__.Mvar.given
Failed example:
    assert a.mean[:,0]==1
Exception raised:
    Traceback (most recent call last):
      File "/usr/lib/python2.6/doctest.py", line 1248, in __run
        compileflags, 1) in test.globs
      File "<doctest __init__.Mvar.given[1]>", line 1, in <module>
        assert a.mean[:,0]==1
    NameError: name 'a' is not defined
----------------------------------------------------------------------
File "/home/olpc/personal-projects/mvar/__init__.py", line 826, in __init__.Mvar.given
Failed example:
    assert a.vectors[:,0]==numpy.zeros
Exception raised:
    Traceback (most recent call last):
      File "/usr/lib/python2.6/doctest.py", line 1248, in __run
        compileflags, 1) in test.globs
      File "<doctest __init__.Mvar.given[2]>", line 1, in <module>
        assert a.vectors[:,0]==numpy.zeros
    NameError: name 'a' is not defined
----------------------------------------------------------------------
File "/home/olpc/personal-projects/mvar/__init__.py", line 851, in __init__.Mvar.given
Failed example:
    a[0]=1
Exception raised:
    Traceback (most recent call last):
      File "/usr/lib/python2.6/doctest.py", line 1248, in __run
        compileflags, 1) in test.globs
      File "<doctest __init__.Mvar.given[13]>", line 1, in <module>
        a[0]=1
      File "/home/olpc/personal-projects/mvar/__init__.py", line 899, in __setitem__
        self.copy(self.given(index,value))
      File "/home/olpc/personal-projects/mvar/__init__.py", line 888, in given
        vectors=vectors,
      File "/home/olpc/personal-projects/mvar/__init__.py", line 335, in __init__
        [1  ,mean   ],
      File "/home/olpc/personal-projects/mvar/helpers.py", line 170, in autostack
        for row in rows
      File "/usr/lib/python2.6/dist-packages/numpy/lib/shape_base.py", line 461, in vstack
        return _nx.concatenate(map(atleast_2d,tup),0)
    ValueError: array dimensions must agree except for d_0
----------------------------------------------------------------------
File "/home/olpc/personal-projects/mvar/__init__.py", line 852, in __init__.Mvar.given
Failed example:
    assert a==A.given(index=0,value=1)
Exception raised:
    Traceback (most recent call last):
      File "/usr/lib/python2.6/doctest.py", line 1248, in __run
        compileflags, 1) in test.globs
      File "<doctest __init__.Mvar.given[14]>", line 1, in <module>
        assert a==A.given(index=0,value=1)
      File "/home/olpc/personal-projects/mvar/__init__.py", line 888, in given
        vectors=vectors,
      File "/home/olpc/personal-projects/mvar/__init__.py", line 335, in __init__
        [1  ,mean   ],
      File "/home/olpc/personal-projects/mvar/helpers.py", line 170, in autostack
        for row in rows
      File "/usr/lib/python2.6/dist-packages/numpy/lib/shape_base.py", line 461, in vstack
        return _nx.concatenate(map(atleast_2d,tup),0)
    ValueError: array dimensions must agree except for d_0


======================================================================
FAIL: Doctest: __init__.Mvar.info
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/usr/lib/python2.6/doctest.py", line 2152, in runTest
    raise self.failureException(self.format_failure(new.getvalue()))
AssertionError: Failed doctest test for __init__.Mvar.info
  File "/home/olpc/personal-projects/mvar/__init__.py", line 1778, in info

----------------------------------------------------------------------
File "/home/olpc/personal-projects/mvar/__init__.py", line 1780, in __init__.Mvar.info
Failed example:
    S=A.sample(100)   
    assert Matrix(-numpy.log(A(S))) == A.info(S)
Exception raised:
    Traceback (most recent call last):
      File "/usr/lib/python2.6/doctest.py", line 1248, in __run
        compileflags, 1) in test.globs
      File "<doctest __init__.Mvar.info[0]>", line 1, in <module>
        S=A.sample(100)
      File "/home/olpc/personal-projects/mvar/__init__.py", line 631, in sample
        return Matrix(numpy.array(units*self.scaled.T)+self.mean)
    ValueError: shape mismatch: objects cannot be broadcast to a single shape


======================================================================
FAIL: Doctest: __init__.Mvar.measure
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/usr/lib/python2.6/doctest.py", line 2152, in runTest
    raise self.failureException(self.format_failure(new.getvalue()))
AssertionError: Failed doctest test for __init__.Mvar.measure
  File "/home/olpc/personal-projects/mvar/__init__.py", line 633, in measure

----------------------------------------------------------------------
File "/home/olpc/personal-projects/mvar/__init__.py", line 656, in __init__.Mvar.measure
Failed example:
    result = sensor1.measure(actual) & sensor2.measure(actual)
Exception raised:
    Traceback (most recent call last):
      File "/usr/lib/python2.6/doctest.py", line 1248, in __run
        compileflags, 1) in test.globs
      File "<doctest __init__.Mvar.measure[5]>", line 1, in <module>
        result = sensor1.measure(actual) & sensor2.measure(actual)
      File "/home/olpc/personal-projects/mvar/__init__.py", line 658, in measure
        sample=self.sample(1)-self.mean
      File "/home/olpc/personal-projects/mvar/__init__.py", line 631, in sample
        return Matrix(numpy.array(units*self.scaled.T)+self.mean)
    ValueError: shape mismatch: objects cannot be broadcast to a single shape


======================================================================
FAIL: Doctest: __init__.Mvar.rank
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/usr/lib/python2.6/doctest.py", line 2152, in runTest
    raise self.failureException(self.format_failure(new.getvalue()))
AssertionError: Failed doctest test for __init__.Mvar.rank
  File "/home/olpc/personal-projects/mvar/__init__.py", line unknown line number, in rank

----------------------------------------------------------------------
File "/home/olpc/personal-projects/mvar/__init__.py", line ?, in __init__.Mvar.rank
Failed example:
    assert A.rank == A.var.size
Exception raised:
    Traceback (most recent call last):
      File "/usr/lib/python2.6/doctest.py", line 1248, in __run
        compileflags, 1) in test.globs
      File "<doctest __init__.Mvar.rank[0]>", line 1, in <module>
        assert A.rank == A.var.size
    AssertionError


======================================================================
FAIL: Doctest: __init__.Mvar.transform
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/usr/lib/python2.6/doctest.py", line 2152, in runTest
    raise self.failureException(self.format_failure(new.getvalue()))
AssertionError: Failed doctest test for __init__.Mvar.transform
  File "/home/olpc/personal-projects/mvar/__init__.py", line 541, in transform

----------------------------------------------------------------------
File "/home/olpc/personal-projects/mvar/__init__.py", line 551, in __init__.Mvar.transform
Failed example:
    assert A.transform(N)== A.transform()**N  
Exception raised:
    Traceback (most recent call last):
      File "/usr/lib/python2.6/doctest.py", line 1248, in __run
        compileflags, 1) in test.globs
      File "<doctest __init__.Mvar.transform[6]>", line 1, in <module>
        assert A.transform(N)== A.transform()**N
    AssertionError


======================================================================
FAIL: Doctest: __init__.givenVector
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/usr/lib/python2.6/doctest.py", line 2152, in runTest
    raise self.failureException(self.format_failure(new.getvalue()))
AssertionError: Failed doctest test for __init__.givenVector
  File "/home/olpc/personal-projects/mvar/__init__.py", line 1939, in givenVector

----------------------------------------------------------------------
File "/home/olpc/personal-projects/mvar/__init__.py", line 1944, in __init__.givenVector
Failed example:
    assert givenVector(A,index=0,value=1)==A.given(index=0,value=1)
Exception raised:
    Traceback (most recent call last):
      File "/usr/lib/python2.6/doctest.py", line 1248, in __run
        compileflags, 1) in test.globs
      File "<doctest __init__.givenVector[0]>", line 1, in <module>
        assert givenVector(A,index=0,value=1)==A.given(index=0,value=1)
      File "/home/olpc/personal-projects/mvar/__init__.py", line 888, in given
        vectors=vectors,
      File "/home/olpc/personal-projects/mvar/__init__.py", line 335, in __init__
        [1  ,mean   ],
      File "/home/olpc/personal-projects/mvar/helpers.py", line 170, in autostack
        for row in rows
      File "/usr/lib/python2.6/dist-packages/numpy/lib/shape_base.py", line 461, in vstack
        return _nx.concatenate(map(atleast_2d,tup),0)
    ValueError: array dimensions must agree except for d_0


======================================================================
FAIL: testDerivation (unitTests.innerTester)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/olpc/personal-projects/mvar/unitTests.py", line 838, in testDerivation
    self.assertTrue( Var == (numpy.array(Mean -dot)**2).mean() )
AssertionError

======================================================================
FAIL: testPlus (unitTests.signTester)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/olpc/personal-projects/mvar/unitTests.py", line 128, in testPlus
    self.assertTrue( self.A+self.A+self.A == 3*self.A )
AssertionError

======================================================================
FAIL: testSub (unitTests.signTester)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/olpc/personal-projects/mvar/unitTests.py", line 171, in testSub
    self.assertTrue( self.A-self.A == Mvar(mean=numpy.zeros_like(self.A.mean)) )
AssertionError

======================================================================
FAIL: testRealPow (unitTests.powerTester)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/olpc/personal-projects/mvar/unitTests.py", line 382, in testRealPow
    self.assertTrue( self.A/self.A**-1 == self.A**2 )
AssertionError

======================================================================
FAIL: testParadoxes (unitTests.inversionTester)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/olpc/personal-projects/mvar/unitTests.py", line 542, in testParadoxes
    self.assertTrue( (self.A & ~self.A) == Mvar(mean=self.A.mean, vectors=self.A.vectors, var=Matrix.infs) )
AssertionError

======================================================================
FAIL: testMoore (unitTests.chainTester)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/olpc/personal-projects/mvar/unitTests.py", line 461, in testMoore
    self.assertTrue( self.A.chain(self.B) == mvar.mooreChain(self.A,self.B) )
AssertionError

======================================================================
FAIL: testDerivation (unitTests.quadTester)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/olpc/personal-projects/mvar/unitTests.py", line 621, in testDerivation
    self.assertTrue( Matrix(dots) == numpy.diag(Da*Da.H) )
AssertionError

======================================================================
FAIL: Doctest: __init__.Mvar.KLdiv
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/usr/lib/python2.6/doctest.py", line 2152, in runTest
    raise self.failureException(self.format_failure(new.getvalue()))
AssertionError: Failed doctest test for __init__.Mvar.KLdiv
  File "/home/olpc/personal-projects/mvar/__init__.py", line 1817, in KLdiv

----------------------------------------------------------------------
File "/home/olpc/personal-projects/mvar/__init__.py", line 1821, in __init__.Mvar.KLdiv
Failed example:
    assert A.KLdiv(A)== 0
Exception raised:
    Traceback (most recent call last):
      File "/usr/lib/python2.6/doctest.py", line 1248, in __run
        compileflags, 1) in test.globs
      File "<doctest __init__.Mvar.KLdiv[0]>", line 1, in <module>
        assert A.KLdiv(A)== 0
      File "/home/olpc/personal-projects/mvar/__init__.py", line 1829, in KLdiv
        numpy.log(self.det()/other.det())-
    ZeroDivisionError: integer division or modulo by zero
----------------------------------------------------------------------
File "/home/olpc/personal-projects/mvar/__init__.py", line 1822, in __init__.Mvar.KLdiv
Failed example:
    assert A.KLdiv(B) > 0
Exception raised:
    Traceback (most recent call last):
      File "/usr/lib/python2.6/doctest.py", line 1248, in __run
        compileflags, 1) in test.globs
      File "<doctest __init__.Mvar.KLdiv[1]>", line 1, in <module>
        assert A.KLdiv(B) > 0
    AssertionError


======================================================================
FAIL: Doctest: __init__.Mvar.__add__
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/usr/lib/python2.6/doctest.py", line 2152, in runTest
    raise self.failureException(self.format_failure(new.getvalue()))
AssertionError: Failed doctest test for __init__.Mvar.__add__
  File "/home/olpc/personal-projects/mvar/__init__.py", line 1705, in __add__

----------------------------------------------------------------------
File "/home/olpc/personal-projects/mvar/__init__.py", line 1735, in __init__.Mvar.__add__
Failed example:
    assert A-A == Mvar(mean=numpy.zeros_like(A.mean))
Exception raised:
    Traceback (most recent call last):
      File "/usr/lib/python2.6/doctest.py", line 1248, in __run
        compileflags, 1) in test.globs
      File "<doctest __init__.Mvar.__add__[5]>", line 1, in <module>
        assert A-A == Mvar(mean=numpy.zeros_like(A.mean))
    AssertionError
----------------------------------------------------------------------
File "/home/olpc/personal-projects/mvar/__init__.py", line 1736, in __init__.Mvar.__add__
Failed example:
    assert (A-B)+B == A
Exception raised:
    Traceback (most recent call last):
      File "/usr/lib/python2.6/doctest.py", line 1248, in __run
        compileflags, 1) in test.globs
      File "<doctest __init__.Mvar.__add__[6]>", line 1, in <module>
        assert (A-B)+B == A
    AssertionError
----------------------------------------------------------------------
File "/home/olpc/personal-projects/mvar/__init__.py", line 1754, in __init__.Mvar.__add__
Failed example:
    assert A+(B-B)==A
Exception raised:
    Traceback (most recent call last):
      File "/usr/lib/python2.6/doctest.py", line 1248, in __run
        compileflags, 1) in test.globs
      File "<doctest __init__.Mvar.__add__[16]>", line 1, in <module>
        assert A+(B-B)==A
    AssertionError


======================================================================
FAIL: Doctest: __init__.Mvar.__gt__
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/usr/lib/python2.6/doctest.py", line 2152, in runTest
    raise self.failureException(self.format_failure(new.getvalue()))
AssertionError: Failed doctest test for __init__.Mvar.__gt__
  File "/home/olpc/personal-projects/mvar/__init__.py", line 1010, in __gt__

----------------------------------------------------------------------
File "/home/olpc/personal-projects/mvar/__init__.py", line 1012, in __init__.Mvar.__gt__
Failed example:
    assert (A > Matrix.infs(A.ndim)) == 0
Exception raised:
    Traceback (most recent call last):
      File "/usr/lib/python2.6/doctest.py", line 1248, in __run
        compileflags, 1) in test.globs
      File "<doctest __init__.Mvar.__gt__[0]>", line 1, in <module>
        assert (A > Matrix.infs(A.ndim)) == 0
      File "/home/olpc/personal-projects/mvar/__init__.py", line 1022, in __gt__
        numpy.inf*numpy.ones(self.mean.size)
      File "/home/olpc/personal-projects/mvar/__init__.py", line 1094, in inBox
        return mvs(lower,upper,self.cov)
      File "/home/olpc/personal-projects/mvar/mvncdf.py", line 189, in mvstdnormcdf
        lowinf = np.isneginf(lower)
      File "/usr/lib/python2.6/dist-packages/numpy/lib/ufunclike.py", line 173, in isneginf
        nx.logical_and(nx.isinf(x), nx.signbit(x), y)
    TypeError: function not supported for these types, and can't coerce safely to supported types
----------------------------------------------------------------------
File "/home/olpc/personal-projects/mvar/__init__.py", line 1013, in __init__.Mvar.__gt__
Failed example:
    assert (A > -Matrix.infs(A.ndim)) == 1
Exception raised:
    Traceback (most recent call last):
      File "/usr/lib/python2.6/doctest.py", line 1248, in __run
        compileflags, 1) in test.globs
      File "<doctest __init__.Mvar.__gt__[1]>", line 1, in <module>
        assert (A > -Matrix.infs(A.ndim)) == 1
      File "/home/olpc/personal-projects/mvar/__init__.py", line 1022, in __gt__
        numpy.inf*numpy.ones(self.mean.size)
      File "/home/olpc/personal-projects/mvar/__init__.py", line 1094, in inBox
        return mvs(lower,upper,self.cov)
      File "/home/olpc/personal-projects/mvar/mvncdf.py", line 189, in mvstdnormcdf
        lowinf = np.isneginf(lower)
      File "/usr/lib/python2.6/dist-packages/numpy/lib/ufunclike.py", line 173, in isneginf
        nx.logical_and(nx.isinf(x), nx.signbit(x), y)
    TypeError: function not supported for these types, and can't coerce safely to supported types
----------------------------------------------------------------------
File "/home/olpc/personal-projects/mvar/__init__.py", line 1016, in __init__.Mvar.__gt__
Failed example:
    assert Matrix(AV>AV.mean) == 2**-AV.ndim 
Exception raised:
    Traceback (most recent call last):
      File "/usr/lib/python2.6/doctest.py", line 1248, in __run
        compileflags, 1) in test.globs
      File "<doctest __init__.Mvar.__gt__[3]>", line 1, in <module>
        assert Matrix(AV>AV.mean) == 2**-AV.ndim
      File "/home/olpc/personal-projects/mvar/__init__.py", line 1022, in __gt__
        numpy.inf*numpy.ones(self.mean.size)
      File "/home/olpc/personal-projects/mvar/__init__.py", line 1078, in inBox
        self=norm(0,self.var**0.5)
    NameError: global name 'norm' is not defined


======================================================================
FAIL: Doctest: __init__.Mvar.__invert__
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/usr/lib/python2.6/doctest.py", line 2152, in runTest
    raise self.failureException(self.format_failure(new.getvalue()))
AssertionError: Failed doctest test for __init__.Mvar.__invert__
  File "/home/olpc/personal-projects/mvar/__init__.py", line 1111, in __invert__

----------------------------------------------------------------------
File "/home/olpc/personal-projects/mvar/__init__.py", line 1141, in __init__.Mvar.__invert__
Failed example:
    assert (A & ~A) == Mvar(mean=A.mean, vectors=A.vectors, var=Matrix.infs)
Exception raised:
    Traceback (most recent call last):
      File "/usr/lib/python2.6/doctest.py", line 1248, in __run
        compileflags, 1) in test.globs
      File "<doctest __init__.Mvar.__invert__[11]>", line 1, in <module>
        assert (A & ~A) == Mvar(mean=A.mean, vectors=A.vectors, var=Matrix.infs)
    AssertionError
----------------------------------------------------------------------
File "/home/olpc/personal-projects/mvar/__init__.py", line 1168, in __init__.Mvar.__invert__
Failed example:
    assert not numpy.isfinite((A & ~A).var).any()
Exception raised:
    Traceback (most recent call last):
      File "/usr/lib/python2.6/doctest.py", line 1248, in __run
        compileflags, 1) in test.globs
      File "<doctest __init__.Mvar.__invert__[17]>", line 1, in <module>
        assert not numpy.isfinite((A & ~A).var).any()
    AssertionError
----------------------------------------------------------------------
File "/home/olpc/personal-projects/mvar/__init__.py", line 1172, in __init__.Mvar.__invert__
Failed example:
    assert P==(A & ~A)       
Exception raised:
    Traceback (most recent call last):
      File "/usr/lib/python2.6/doctest.py", line 1248, in __run
        compileflags, 1) in test.globs
      File "<doctest __init__.Mvar.__invert__[20]>", line 1, in <module>
        assert P==(A & ~A)
    AssertionError


======================================================================
FAIL: Doctest: __init__.Mvar.__lt__
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/usr/lib/python2.6/doctest.py", line 2152, in runTest
    raise self.failureException(self.format_failure(new.getvalue()))
AssertionError: Failed doctest test for __init__.Mvar.__lt__
  File "/home/olpc/personal-projects/mvar/__init__.py", line 1031, in __lt__

----------------------------------------------------------------------
File "/home/olpc/personal-projects/mvar/__init__.py", line 1033, in __init__.Mvar.__lt__
Failed example:
    assert (A < Matrix.infs(A.ndim)) == 1
Exception raised:
    Traceback (most recent call last):
      File "/usr/lib/python2.6/doctest.py", line 1248, in __run
        compileflags, 1) in test.globs
      File "<doctest __init__.Mvar.__lt__[0]>", line 1, in <module>
        assert (A < Matrix.infs(A.ndim)) == 1
      File "/home/olpc/personal-projects/mvar/__init__.py", line 1043, in __lt__
        upper,
      File "/home/olpc/personal-projects/mvar/__init__.py", line 1094, in inBox
        return mvs(lower,upper,self.cov)
      File "/home/olpc/personal-projects/mvar/mvncdf.py", line 189, in mvstdnormcdf
        lowinf = np.isneginf(lower)
      File "/usr/lib/python2.6/dist-packages/numpy/lib/ufunclike.py", line 173, in isneginf
        nx.logical_and(nx.isinf(x), nx.signbit(x), y)
    TypeError: function not supported for these types, and can't coerce safely to supported types
----------------------------------------------------------------------
File "/home/olpc/personal-projects/mvar/__init__.py", line 1034, in __init__.Mvar.__lt__
Failed example:
    assert (A < -Matrix.infs(A.ndim)) == 0
Exception raised:
    Traceback (most recent call last):
      File "/usr/lib/python2.6/doctest.py", line 1248, in __run
        compileflags, 1) in test.globs
      File "<doctest __init__.Mvar.__lt__[1]>", line 1, in <module>
        assert (A < -Matrix.infs(A.ndim)) == 0
      File "/home/olpc/personal-projects/mvar/__init__.py", line 1043, in __lt__
        upper,
      File "/home/olpc/personal-projects/mvar/__init__.py", line 1094, in inBox
        return mvs(lower,upper,self.cov)
      File "/home/olpc/personal-projects/mvar/mvncdf.py", line 189, in mvstdnormcdf
        lowinf = np.isneginf(lower)
      File "/usr/lib/python2.6/dist-packages/numpy/lib/ufunclike.py", line 173, in isneginf
        nx.logical_and(nx.isinf(x), nx.signbit(x), y)
    TypeError: function not supported for these types, and can't coerce safely to supported types
----------------------------------------------------------------------
File "/home/olpc/personal-projects/mvar/__init__.py", line 1037, in __init__.Mvar.__lt__
Failed example:
    assert Matrix(AV<AV.mean) == 2**-AV.ndim 
Exception raised:
    Traceback (most recent call last):
      File "/usr/lib/python2.6/doctest.py", line 1248, in __run
        compileflags, 1) in test.globs
      File "<doctest __init__.Mvar.__lt__[3]>", line 1, in <module>
        assert Matrix(AV<AV.mean) == 2**-AV.ndim
      File "/home/olpc/personal-projects/mvar/__init__.py", line 1043, in __lt__
        upper,
      File "/home/olpc/personal-projects/mvar/__init__.py", line 1078, in inBox
        self=norm(0,self.var**0.5)
    NameError: global name 'norm' is not defined


======================================================================
FAIL: Doctest: __init__.Mvar.chain
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/usr/lib/python2.6/doctest.py", line 2152, in runTest
    raise self.failureException(self.format_failure(new.getvalue()))
AssertionError: Failed doctest test for __init__.Mvar.chain
  File "/home/olpc/personal-projects/mvar/__init__.py", line 727, in chain

----------------------------------------------------------------------
File "/home/olpc/personal-projects/mvar/__init__.py", line 753, in __init__.Mvar.chain
Failed example:
    assert A.chain(B) == mooreChain(A,B)
Exception raised:
    Traceback (most recent call last):
      File "/usr/lib/python2.6/doctest.py", line 1248, in __run
        compileflags, 1) in test.globs
      File "<doctest __init__.Mvar.chain[2]>", line 1, in <module>
        assert A.chain(B) == mooreChain(A,B)
    AssertionError
----------------------------------------------------------------------
File "/home/olpc/personal-projects/mvar/__init__.py", line 754, in __init__.Mvar.chain
Failed example:
    assert A.chain(B*M,M) == mooreChain(A,B*M,M)
Exception raised:
    Traceback (most recent call last):
      File "/usr/lib/python2.6/doctest.py", line 1248, in __run
        compileflags, 1) in test.globs
      File "<doctest __init__.Mvar.chain[3]>", line 1, in <module>
        assert A.chain(B*M,M) == mooreChain(A,B*M,M)
    AssertionError


======================================================================
FAIL: Doctest: __init__.Mvar.given
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/usr/lib/python2.6/doctest.py", line 2152, in runTest
    raise self.failureException(self.format_failure(new.getvalue()))
AssertionError: Failed doctest test for __init__.Mvar.given
  File "/home/olpc/personal-projects/mvar/__init__.py", line 813, in given

----------------------------------------------------------------------
File "/home/olpc/personal-projects/mvar/__init__.py", line 824, in __init__.Mvar.given
Failed example:
    a = A.given(index=0,value=1)
Exception raised:
    Traceback (most recent call last):
      File "/usr/lib/python2.6/doctest.py", line 1248, in __run
        compileflags, 1) in test.globs
      File "<doctest __init__.Mvar.given[0]>", line 1, in <module>
        a = A.given(index=0,value=1)
      File "/home/olpc/personal-projects/mvar/__init__.py", line 888, in given
        vectors=vectors,
      File "/home/olpc/personal-projects/mvar/__init__.py", line 335, in __init__
        [1  ,mean   ],
      File "/home/olpc/personal-projects/mvar/helpers.py", line 170, in autostack
        for row in rows
      File "/usr/lib/python2.6/dist-packages/numpy/lib/shape_base.py", line 461, in vstack
        return _nx.concatenate(map(atleast_2d,tup),0)
    ValueError: array dimensions must agree except for d_0
----------------------------------------------------------------------
File "/home/olpc/personal-projects/mvar/__init__.py", line 825, in __init__.Mvar.given
Failed example:
    assert a.mean[:,0]==1
Exception raised:
    Traceback (most recent call last):
      File "/usr/lib/python2.6/doctest.py", line 1248, in __run
        compileflags, 1) in test.globs
      File "<doctest __init__.Mvar.given[1]>", line 1, in <module>
        assert a.mean[:,0]==1
    NameError: name 'a' is not defined
----------------------------------------------------------------------
File "/home/olpc/personal-projects/mvar/__init__.py", line 826, in __init__.Mvar.given
Failed example:
    assert a.vectors[:,0]==numpy.zeros
Exception raised:
    Traceback (most recent call last):
      File "/usr/lib/python2.6/doctest.py", line 1248, in __run
        compileflags, 1) in test.globs
      File "<doctest __init__.Mvar.given[2]>", line 1, in <module>
        assert a.vectors[:,0]==numpy.zeros
    NameError: name 'a' is not defined
----------------------------------------------------------------------
File "/home/olpc/personal-projects/mvar/__init__.py", line 851, in __init__.Mvar.given
Failed example:
    a[0]=1
Exception raised:
    Traceback (most recent call last):
      File "/usr/lib/python2.6/doctest.py", line 1248, in __run
        compileflags, 1) in test.globs
      File "<doctest __init__.Mvar.given[13]>", line 1, in <module>
        a[0]=1
      File "/home/olpc/personal-projects/mvar/__init__.py", line 899, in __setitem__
        self.copy(self.given(index,value))
      File "/home/olpc/personal-projects/mvar/__init__.py", line 888, in given
        vectors=vectors,
      File "/home/olpc/personal-projects/mvar/__init__.py", line 335, in __init__
        [1  ,mean   ],
      File "/home/olpc/personal-projects/mvar/helpers.py", line 170, in autostack
        for row in rows
      File "/usr/lib/python2.6/dist-packages/numpy/lib/shape_base.py", line 461, in vstack
        return _nx.concatenate(map(atleast_2d,tup),0)
    ValueError: array dimensions must agree except for d_0
----------------------------------------------------------------------
File "/home/olpc/personal-projects/mvar/__init__.py", line 852, in __init__.Mvar.given
Failed example:
    assert a==A.given(index=0,value=1)
Exception raised:
    Traceback (most recent call last):
      File "/usr/lib/python2.6/doctest.py", line 1248, in __run
        compileflags, 1) in test.globs
      File "<doctest __init__.Mvar.given[14]>", line 1, in <module>
        assert a==A.given(index=0,value=1)
      File "/home/olpc/personal-projects/mvar/__init__.py", line 888, in given
        vectors=vectors,
      File "/home/olpc/personal-projects/mvar/__init__.py", line 335, in __init__
        [1  ,mean   ],
      File "/home/olpc/personal-projects/mvar/helpers.py", line 170, in autostack
        for row in rows
      File "/usr/lib/python2.6/dist-packages/numpy/lib/shape_base.py", line 461, in vstack
        return _nx.concatenate(map(atleast_2d,tup),0)
    ValueError: array dimensions must agree except for d_0


======================================================================
FAIL: Doctest: __init__.Mvar.inner
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/usr/lib/python2.6/doctest.py", line 2152, in runTest
    raise self.failureException(self.format_failure(new.getvalue()))
AssertionError: Failed doctest test for __init__.Mvar.inner
  File "/home/olpc/personal-projects/mvar/__init__.py", line 1676, in inner

----------------------------------------------------------------------
File "/home/olpc/personal-projects/mvar/__init__.py", line 1678, in __init__.Mvar.inner
Failed example:
    assert A.inner(B) == B.inner(A)
Exception raised:
    Traceback (most recent call last):
      File "/usr/lib/python2.6/doctest.py", line 1248, in __run
        compileflags, 1) in test.globs
      File "<doctest __init__.Mvar.inner[0]>", line 1, in <module>
        assert A.inner(B) == B.inner(A)
    AssertionError


======================================================================
FAIL: Doctest: __init__.Mvar.rank
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/usr/lib/python2.6/doctest.py", line 2152, in runTest
    raise self.failureException(self.format_failure(new.getvalue()))
AssertionError: Failed doctest test for __init__.Mvar.rank
  File "/home/olpc/personal-projects/mvar/__init__.py", line unknown line number, in rank

----------------------------------------------------------------------
File "/home/olpc/personal-projects/mvar/__init__.py", line ?, in __init__.Mvar.rank
Failed example:
    assert A.rank == A.var.size
Exception raised:
    Traceback (most recent call last):
      File "/usr/lib/python2.6/doctest.py", line 1248, in __run
        compileflags, 1) in test.globs
      File "<doctest __init__.Mvar.rank[0]>", line 1, in <module>
        assert A.rank == A.var.size
    AssertionError


======================================================================
FAIL: Doctest: __init__.givenVector
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/usr/lib/python2.6/doctest.py", line 2152, in runTest
    raise self.failureException(self.format_failure(new.getvalue()))
AssertionError: Failed doctest test for __init__.givenVector
  File "/home/olpc/personal-projects/mvar/__init__.py", line 1939, in givenVector

----------------------------------------------------------------------
File "/home/olpc/personal-projects/mvar/__init__.py", line 1944, in __init__.givenVector
Failed example:
    assert givenVector(A,index=0,value=1)==A.given(index=0,value=1)
Exception raised:
    Traceback (most recent call last):
      File "/usr/lib/python2.6/doctest.py", line 1248, in __run
        compileflags, 1) in test.globs
      File "<doctest __init__.givenVector[0]>", line 1, in <module>
        assert givenVector(A,index=0,value=1)==A.given(index=0,value=1)
      File "/home/olpc/personal-projects/mvar/__init__.py", line 888, in given
        vectors=vectors,
      File "/home/olpc/personal-projects/mvar/__init__.py", line 335, in __init__
        [1  ,mean   ],
      File "/home/olpc/personal-projects/mvar/helpers.py", line 170, in autostack
        for row in rows
      File "/usr/lib/python2.6/dist-packages/numpy/lib/shape_base.py", line 461, in vstack
        return _nx.concatenate(map(atleast_2d,tup),0)
    ValueError: array dimensions must agree except for d_0


======================================================================
FAIL: testMatrixMul (unitTests.productTester)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/olpc/personal-projects/mvar/unitTests.py", line 251, in testMatrixMul
    self.assertTrue( (self.A*self.M)*self.M2.H == self.A*(self.M*self.M2.H) )
AssertionError

======================================================================
FAIL: testDerivation (unitTests.innerTester)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/olpc/personal-projects/mvar/unitTests.py", line 838, in testDerivation
    self.assertTrue( Var == (numpy.array(Mean -dot)**2).mean() )
AssertionError

======================================================================
FAIL: testSub (unitTests.signTester)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/olpc/personal-projects/mvar/unitTests.py", line 171, in testSub
    self.assertTrue( self.A-self.A == Mvar(mean=numpy.zeros_like(self.A.mean)) )
AssertionError

======================================================================
FAIL: testAnd (unitTests.chainTester)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/olpc/personal-projects/mvar/unitTests.py", line 513, in testAnd
    self.assertTrue(measured[:self.ndim] == self.A&self.B)
AssertionError

======================================================================
FAIL: testStacks (unitTests.chainTester)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/olpc/personal-projects/mvar/unitTests.py", line 474, in testStacks
    Mvar.fromData(numpy.hstack([dataA,dataA]))
AssertionError

======================================================================
FAIL: testDerivation (unitTests.quadTester)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/olpc/personal-projects/mvar/unitTests.py", line 621, in testDerivation
    self.assertTrue( Matrix(dots) == numpy.diag(Da*Da.H) )
AssertionError

======================================================================
FAIL: Doctest: __init__.Mvar.__add__
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/usr/lib/python2.6/doctest.py", line 2152, in runTest
    raise self.failureException(self.format_failure(new.getvalue()))
AssertionError: Failed doctest test for __init__.Mvar.__add__
  File "/home/olpc/personal-projects/mvar/__init__.py", line 1705, in __add__

----------------------------------------------------------------------
File "/home/olpc/personal-projects/mvar/__init__.py", line 1735, in __init__.Mvar.__add__
Failed example:
    assert A-A == Mvar(mean=numpy.zeros_like(A.mean))
Exception raised:
    Traceback (most recent call last):
      File "/usr/lib/python2.6/doctest.py", line 1248, in __run
        compileflags, 1) in test.globs
      File "<doctest __init__.Mvar.__add__[5]>", line 1, in <module>
        assert A-A == Mvar(mean=numpy.zeros_like(A.mean))
    AssertionError


======================================================================
FAIL: Doctest: __init__.Mvar.__gt__
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/usr/lib/python2.6/doctest.py", line 2152, in runTest
    raise self.failureException(self.format_failure(new.getvalue()))
AssertionError: Failed doctest test for __init__.Mvar.__gt__
  File "/home/olpc/personal-projects/mvar/__init__.py", line 1010, in __gt__

----------------------------------------------------------------------
File "/home/olpc/personal-projects/mvar/__init__.py", line 1012, in __init__.Mvar.__gt__
Failed example:
    assert (A > Matrix.infs(A.ndim)) == 0
Exception raised:
    Traceback (most recent call last):
      File "/usr/lib/python2.6/doctest.py", line 1248, in __run
        compileflags, 1) in test.globs
      File "<doctest __init__.Mvar.__gt__[0]>", line 1, in <module>
        assert (A > Matrix.infs(A.ndim)) == 0
      File "/home/olpc/personal-projects/mvar/__init__.py", line 1022, in __gt__
        numpy.inf*numpy.ones(self.mean.size)
      File "/home/olpc/personal-projects/mvar/__init__.py", line 1094, in inBox
        return mvs(lower,upper,self.cov)
      File "/home/olpc/personal-projects/mvar/mvncdf.py", line 189, in mvstdnormcdf
        lowinf = np.isneginf(lower)
      File "/usr/lib/python2.6/dist-packages/numpy/lib/ufunclike.py", line 173, in isneginf
        nx.logical_and(nx.isinf(x), nx.signbit(x), y)
    TypeError: function not supported for these types, and can't coerce safely to supported types
----------------------------------------------------------------------
File "/home/olpc/personal-projects/mvar/__init__.py", line 1013, in __init__.Mvar.__gt__
Failed example:
    assert (A > -Matrix.infs(A.ndim)) == 1
Exception raised:
    Traceback (most recent call last):
      File "/usr/lib/python2.6/doctest.py", line 1248, in __run
        compileflags, 1) in test.globs
      File "<doctest __init__.Mvar.__gt__[1]>", line 1, in <module>
        assert (A > -Matrix.infs(A.ndim)) == 1
      File "/home/olpc/personal-projects/mvar/__init__.py", line 1022, in __gt__
        numpy.inf*numpy.ones(self.mean.size)
      File "/home/olpc/personal-projects/mvar/__init__.py", line 1094, in inBox
        return mvs(lower,upper,self.cov)
      File "/home/olpc/personal-projects/mvar/mvncdf.py", line 189, in mvstdnormcdf
        lowinf = np.isneginf(lower)
      File "/usr/lib/python2.6/dist-packages/numpy/lib/ufunclike.py", line 173, in isneginf
        nx.logical_and(nx.isinf(x), nx.signbit(x), y)
    TypeError: function not supported for these types, and can't coerce safely to supported types
----------------------------------------------------------------------
File "/home/olpc/personal-projects/mvar/__init__.py", line 1016, in __init__.Mvar.__gt__
Failed example:
    assert Matrix(AV>AV.mean) == 2**-AV.ndim 
Exception raised:
    Traceback (most recent call last):
      File "/usr/lib/python2.6/doctest.py", line 1248, in __run
        compileflags, 1) in test.globs
      File "<doctest __init__.Mvar.__gt__[3]>", line 1, in <module>
        assert Matrix(AV>AV.mean) == 2**-AV.ndim
      File "/home/olpc/personal-projects/mvar/__init__.py", line 1022, in __gt__
        numpy.inf*numpy.ones(self.mean.size)
      File "/home/olpc/personal-projects/mvar/__init__.py", line 1094, in inBox
        return mvs(lower,upper,self.cov)
      File "/home/olpc/personal-projects/mvar/mvncdf.py", line 189, in mvstdnormcdf
        lowinf = np.isneginf(lower)
      File "/usr/lib/python2.6/dist-packages/numpy/lib/ufunclike.py", line 173, in isneginf
        nx.logical_and(nx.isinf(x), nx.signbit(x), y)
    TypeError: function not supported for these types, and can't coerce safely to supported types


======================================================================
FAIL: Doctest: __init__.Mvar.__lt__
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/usr/lib/python2.6/doctest.py", line 2152, in runTest
    raise self.failureException(self.format_failure(new.getvalue()))
AssertionError: Failed doctest test for __init__.Mvar.__lt__
  File "/home/olpc/personal-projects/mvar/__init__.py", line 1031, in __lt__

----------------------------------------------------------------------
File "/home/olpc/personal-projects/mvar/__init__.py", line 1033, in __init__.Mvar.__lt__
Failed example:
    assert (A < Matrix.infs(A.ndim)) == 1
Exception raised:
    Traceback (most recent call last):
      File "/usr/lib/python2.6/doctest.py", line 1248, in __run
        compileflags, 1) in test.globs
      File "<doctest __init__.Mvar.__lt__[0]>", line 1, in <module>
        assert (A < Matrix.infs(A.ndim)) == 1
      File "/home/olpc/personal-projects/mvar/__init__.py", line 1043, in __lt__
        upper,
      File "/home/olpc/personal-projects/mvar/__init__.py", line 1094, in inBox
        return mvs(lower,upper,self.cov)
      File "/home/olpc/personal-projects/mvar/mvncdf.py", line 189, in mvstdnormcdf
        lowinf = np.isneginf(lower)
      File "/usr/lib/python2.6/dist-packages/numpy/lib/ufunclike.py", line 173, in isneginf
        nx.logical_and(nx.isinf(x), nx.signbit(x), y)
    TypeError: function not supported for these types, and can't coerce safely to supported types
----------------------------------------------------------------------
File "/home/olpc/personal-projects/mvar/__init__.py", line 1034, in __init__.Mvar.__lt__
Failed example:
    assert (A < -Matrix.infs(A.ndim)) == 0
Exception raised:
    Traceback (most recent call last):
      File "/usr/lib/python2.6/doctest.py", line 1248, in __run
        compileflags, 1) in test.globs
      File "<doctest __init__.Mvar.__lt__[1]>", line 1, in <module>
        assert (A < -Matrix.infs(A.ndim)) == 0
      File "/home/olpc/personal-projects/mvar/__init__.py", line 1043, in __lt__
        upper,
      File "/home/olpc/personal-projects/mvar/__init__.py", line 1094, in inBox
        return mvs(lower,upper,self.cov)
      File "/home/olpc/personal-projects/mvar/mvncdf.py", line 189, in mvstdnormcdf
        lowinf = np.isneginf(lower)
      File "/usr/lib/python2.6/dist-packages/numpy/lib/ufunclike.py", line 173, in isneginf
        nx.logical_and(nx.isinf(x), nx.signbit(x), y)
    TypeError: function not supported for these types, and can't coerce safely to supported types
----------------------------------------------------------------------
File "/home/olpc/personal-projects/mvar/__init__.py", line 1037, in __init__.Mvar.__lt__
Failed example:
    assert Matrix(AV<AV.mean) == 2**-AV.ndim 
Exception raised:
    Traceback (most recent call last):
      File "/usr/lib/python2.6/doctest.py", line 1248, in __run
        compileflags, 1) in test.globs
      File "<doctest __init__.Mvar.__lt__[3]>", line 1, in <module>
        assert Matrix(AV<AV.mean) == 2**-AV.ndim
      File "/home/olpc/personal-projects/mvar/__init__.py", line 1043, in __lt__
        upper,
      File "/home/olpc/personal-projects/mvar/__init__.py", line 1094, in inBox
        return mvs(lower,upper,self.cov)
      File "/home/olpc/personal-projects/mvar/mvncdf.py", line 189, in mvstdnormcdf
        lowinf = np.isneginf(lower)
      File "/usr/lib/python2.6/dist-packages/numpy/lib/ufunclike.py", line 173, in isneginf
        nx.logical_and(nx.isinf(x), nx.signbit(x), y)
    TypeError: function not supported for these types, and can't coerce safely to supported types


======================================================================
FAIL: Doctest: __init__.Mvar.__mul__
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/usr/lib/python2.6/doctest.py", line 2152, in runTest
    raise self.failureException(self.format_failure(new.getvalue()))
AssertionError: Failed doctest test for __init__.Mvar.__mul__
  File "/home/olpc/personal-projects/mvar/__init__.py", line 25, in __mul__

----------------------------------------------------------------------
File "/home/olpc/personal-projects/mvar/__init__.py", line 73, in __init__.Mvar.__mul__
Failed example:
    assert (A*M)*M2.H == A*(M*M2.H)
Exception raised:
    Traceback (most recent call last):
      File "/usr/lib/python2.6/doctest.py", line 1248, in __run
        compileflags, 1) in test.globs
      File "<doctest __init__.Mvar.__mul__[15]>", line 1, in <module>
        assert (A*M)*M2.H == A*(M*M2.H)
    AssertionError


======================================================================
FAIL: Doctest: __init__.Mvar.chain
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/usr/lib/python2.6/doctest.py", line 2152, in runTest
    raise self.failureException(self.format_failure(new.getvalue()))
AssertionError: Failed doctest test for __init__.Mvar.chain
  File "/home/olpc/personal-projects/mvar/__init__.py", line 727, in chain

----------------------------------------------------------------------
File "/home/olpc/personal-projects/mvar/__init__.py", line 760, in __init__.Mvar.chain
Failed example:
    assert a.chain()==Mvar.fromData(numpy.hstack([dataA,dataA]))        
Exception raised:
    Traceback (most recent call last):
      File "/usr/lib/python2.6/doctest.py", line 1248, in __run
        compileflags, 1) in test.globs
      File "<doctest __init__.Mvar.chain[6]>", line 1, in <module>
        assert a.chain()==Mvar.fromData(numpy.hstack([dataA,dataA]))
    AssertionError
----------------------------------------------------------------------
File "/home/olpc/personal-projects/mvar/__init__.py", line 761, in __init__.Mvar.chain
Failed example:
    assert a.chain(transform=M) == Mvar.fromData(dataA*numpy.hstack([E,M]))
Exception raised:
    Traceback (most recent call last):
      File "/usr/lib/python2.6/doctest.py", line 1248, in __run
        compileflags, 1) in test.globs
      File "<doctest __init__.Mvar.chain[7]>", line 1, in <module>
        assert a.chain(transform=M) == Mvar.fromData(dataA*numpy.hstack([E,M]))
    AssertionError
----------------------------------------------------------------------
File "/home/olpc/personal-projects/mvar/__init__.py", line 762, in __init__.Mvar.chain
Failed example:
    assert a.chain(transform=M) == Mvar.fromData(numpy.hstack([dataA,dataA*M]))
Exception raised:
    Traceback (most recent call last):
      File "/usr/lib/python2.6/doctest.py", line 1248, in __run
        compileflags, 1) in test.globs
      File "<doctest __init__.Mvar.chain[8]>", line 1, in <module>
        assert a.chain(transform=M) == Mvar.fromData(numpy.hstack([dataA,dataA*M]))
    AssertionError


----------------------------------------------------------------------
Ran 660 tests in 181.273s

FAILED (failures=94, errors=31)
